2024-09-11 17:22:50,887:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_5692\4145667432.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].str.replace("Sim", "1", case=False, regex=False)

2024-09-11 17:22:50,889:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_5692\4145667432.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].str.replace("Não", "0", case=False, regex=False)

2024-09-12 08:17:36,574:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2426022983.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:22:11,090:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\1170529592.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:22:11,093:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\1170529592.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:30:25,453:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:30:25,455:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:38:47,813:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\71943151.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:38:47,816:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\71943151.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:38:56,849:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\251771127.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:38:56,851:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\251771127.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:39:03,022:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:39:03,024:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:39:08,499:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\386281588.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:39:08,502:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\386281588.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:39:16,193:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:39:16,196:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\4133561447.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1": 1, "0": 0, "2": 2, "3": 3})

2024-09-12 08:41:17,250:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2009673221.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:41:17,253:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2009673221.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({1: 1, 0: 0, 2: 2, 3: 3})

2024-09-12 08:41:19,154:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2009673221.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:41:19,157:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2009673221.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({1: 1, 0: 0, 2: 2, 3: 3})

2024-09-12 08:43:50,466:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2617134326.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:43:50,470:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2617134326.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1\"": 1, "0\"": 0, "2\"": 2, "3\"": 3})

2024-09-12 08:47:03,842:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2617134326.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-12 08:47:03,844:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_8756\2617134326.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1\"": 1, "0\"": 0, "2\"": 2, "3\"": 3})

2024-09-13 14:55:18,138:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_6488\2617134326.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-13 14:55:18,141:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_6488\2617134326.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1\"": 1, "0\"": 0, "2\"": 2, "3\"": 3})

2024-09-16 23:38:57,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:38:57,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:38:57,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:38:57,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:39:51,950:INFO:PyCaret ClassificationExperiment
2024-09-16 23:39:51,950:INFO:Logging name: clf-default-name
2024-09-16 23:39:51,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:39:51,951:INFO:version 3.3.2
2024-09-16 23:39:51,951:INFO:Initializing setup()
2024-09-16 23:39:51,951:INFO:self.USI: 26d8
2024-09-16 23:39:51,951:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:39:51,951:INFO:Checking environment
2024-09-16 23:39:51,952:INFO:python_version: 3.11.5
2024-09-16 23:39:51,952:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:39:51,952:INFO:machine: AMD64
2024-09-16 23:39:51,952:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:39:51,957:INFO:Memory: svmem(total=8000290816, available=324034560, percent=95.9, used=7676256256, free=324034560)
2024-09-16 23:39:51,958:INFO:Physical Core: 2
2024-09-16 23:39:51,958:INFO:Logical Core: 4
2024-09-16 23:39:51,958:INFO:Checking libraries
2024-09-16 23:39:51,958:INFO:System:
2024-09-16 23:39:51,959:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:39:51,959:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:39:51,959:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:39:51,959:INFO:PyCaret required dependencies:
2024-09-16 23:39:52,211:INFO:                 pip: 24.0
2024-09-16 23:39:52,212:INFO:          setuptools: 65.5.0
2024-09-16 23:39:52,212:INFO:             pycaret: 3.3.2
2024-09-16 23:39:52,212:INFO:             IPython: 8.15.0
2024-09-16 23:39:52,212:INFO:          ipywidgets: 8.1.3
2024-09-16 23:39:52,212:INFO:                tqdm: 4.66.4
2024-09-16 23:39:52,212:INFO:               numpy: 1.25.2
2024-09-16 23:39:52,212:INFO:              pandas: 2.1.4
2024-09-16 23:39:52,212:INFO:              jinja2: 3.1.2
2024-09-16 23:39:52,212:INFO:               scipy: 1.11.2
2024-09-16 23:39:52,213:INFO:              joblib: 1.3.2
2024-09-16 23:39:52,213:INFO:             sklearn: 1.4.2
2024-09-16 23:39:52,213:INFO:                pyod: 2.0.0
2024-09-16 23:39:52,213:INFO:            imblearn: 0.12.3
2024-09-16 23:39:52,213:INFO:   category_encoders: 2.6.3
2024-09-16 23:39:52,213:INFO:            lightgbm: 4.3.0
2024-09-16 23:39:52,213:INFO:               numba: 0.59.1
2024-09-16 23:39:52,213:INFO:            requests: 2.31.0
2024-09-16 23:39:52,213:INFO:          matplotlib: 3.7.2
2024-09-16 23:39:52,214:INFO:          scikitplot: 0.3.7
2024-09-16 23:39:52,214:INFO:         yellowbrick: 1.5
2024-09-16 23:39:52,214:INFO:              plotly: 5.22.0
2024-09-16 23:39:52,214:INFO:    plotly-resampler: Not installed
2024-09-16 23:39:52,214:INFO:             kaleido: 0.2.1
2024-09-16 23:39:52,214:INFO:           schemdraw: 0.15
2024-09-16 23:39:52,214:INFO:         statsmodels: 0.14.2
2024-09-16 23:39:52,214:INFO:              sktime: 0.26.0
2024-09-16 23:39:52,214:INFO:               tbats: 1.1.3
2024-09-16 23:39:52,214:INFO:            pmdarima: 2.0.4
2024-09-16 23:39:52,214:INFO:              psutil: 5.9.5
2024-09-16 23:39:52,215:INFO:          markupsafe: 2.1.3
2024-09-16 23:39:52,215:INFO:             pickle5: Not installed
2024-09-16 23:39:52,215:INFO:         cloudpickle: 3.0.0
2024-09-16 23:39:52,215:INFO:         deprecation: 2.1.0
2024-09-16 23:39:52,215:INFO:              xxhash: 3.4.1
2024-09-16 23:39:52,216:INFO:           wurlitzer: 3.1.0
2024-09-16 23:39:52,216:INFO:PyCaret optional dependencies:
2024-09-16 23:39:55,566:INFO:                shap: Not installed
2024-09-16 23:39:55,566:INFO:           interpret: Not installed
2024-09-16 23:39:55,566:INFO:                umap: Not installed
2024-09-16 23:39:55,567:INFO:     ydata_profiling: Not installed
2024-09-16 23:39:55,567:INFO:  explainerdashboard: Not installed
2024-09-16 23:39:55,567:INFO:             autoviz: Not installed
2024-09-16 23:39:55,567:INFO:           fairlearn: Not installed
2024-09-16 23:39:55,567:INFO:          deepchecks: Not installed
2024-09-16 23:39:55,568:INFO:             xgboost: Not installed
2024-09-16 23:39:55,568:INFO:            catboost: Not installed
2024-09-16 23:39:55,568:INFO:              kmodes: Not installed
2024-09-16 23:39:55,568:INFO:             mlxtend: Not installed
2024-09-16 23:39:55,568:INFO:       statsforecast: Not installed
2024-09-16 23:39:55,568:INFO:        tune_sklearn: Not installed
2024-09-16 23:39:55,568:INFO:                 ray: Not installed
2024-09-16 23:39:55,569:INFO:            hyperopt: Not installed
2024-09-16 23:39:55,569:INFO:              optuna: Not installed
2024-09-16 23:39:55,569:INFO:               skopt: Not installed
2024-09-16 23:39:55,569:INFO:              mlflow: Not installed
2024-09-16 23:39:55,569:INFO:              gradio: Not installed
2024-09-16 23:39:55,569:INFO:             fastapi: 0.104.1
2024-09-16 23:39:55,569:INFO:             uvicorn: Not installed
2024-09-16 23:39:55,570:INFO:              m2cgen: Not installed
2024-09-16 23:39:55,570:INFO:           evidently: Not installed
2024-09-16 23:39:55,570:INFO:               fugue: Not installed
2024-09-16 23:39:55,570:INFO:           streamlit: Not installed
2024-09-16 23:39:55,570:INFO:             prophet: Not installed
2024-09-16 23:39:55,570:INFO:None
2024-09-16 23:39:55,570:INFO:Set up data.
2024-09-16 23:40:13,374:INFO:PyCaret ClassificationExperiment
2024-09-16 23:40:13,374:INFO:Logging name: clf-default-name
2024-09-16 23:40:13,374:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:40:13,375:INFO:version 3.3.2
2024-09-16 23:40:13,375:INFO:Initializing setup()
2024-09-16 23:40:13,375:INFO:self.USI: f665
2024-09-16 23:40:13,375:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:40:13,375:INFO:Checking environment
2024-09-16 23:40:13,375:INFO:python_version: 3.11.5
2024-09-16 23:40:13,376:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:40:13,376:INFO:machine: AMD64
2024-09-16 23:40:13,376:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:40:13,381:INFO:Memory: svmem(total=8000290816, available=473686016, percent=94.1, used=7526604800, free=473686016)
2024-09-16 23:40:13,381:INFO:Physical Core: 2
2024-09-16 23:40:13,382:INFO:Logical Core: 4
2024-09-16 23:40:13,382:INFO:Checking libraries
2024-09-16 23:40:13,382:INFO:System:
2024-09-16 23:40:13,382:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:40:13,382:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:40:13,383:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:40:13,383:INFO:PyCaret required dependencies:
2024-09-16 23:40:13,383:INFO:                 pip: 24.0
2024-09-16 23:40:13,383:INFO:          setuptools: 65.5.0
2024-09-16 23:40:13,384:INFO:             pycaret: 3.3.2
2024-09-16 23:40:13,384:INFO:             IPython: 8.15.0
2024-09-16 23:40:13,384:INFO:          ipywidgets: 8.1.3
2024-09-16 23:40:13,384:INFO:                tqdm: 4.66.4
2024-09-16 23:40:13,385:INFO:               numpy: 1.25.2
2024-09-16 23:40:13,385:INFO:              pandas: 2.1.4
2024-09-16 23:40:13,385:INFO:              jinja2: 3.1.2
2024-09-16 23:40:13,385:INFO:               scipy: 1.11.2
2024-09-16 23:40:13,385:INFO:              joblib: 1.3.2
2024-09-16 23:40:13,385:INFO:             sklearn: 1.4.2
2024-09-16 23:40:13,386:INFO:                pyod: 2.0.0
2024-09-16 23:40:13,386:INFO:            imblearn: 0.12.3
2024-09-16 23:40:13,386:INFO:   category_encoders: 2.6.3
2024-09-16 23:40:13,386:INFO:            lightgbm: 4.3.0
2024-09-16 23:40:13,386:INFO:               numba: 0.59.1
2024-09-16 23:40:13,386:INFO:            requests: 2.31.0
2024-09-16 23:40:13,387:INFO:          matplotlib: 3.7.2
2024-09-16 23:40:13,387:INFO:          scikitplot: 0.3.7
2024-09-16 23:40:13,387:INFO:         yellowbrick: 1.5
2024-09-16 23:40:13,387:INFO:              plotly: 5.22.0
2024-09-16 23:40:13,387:INFO:    plotly-resampler: Not installed
2024-09-16 23:40:13,387:INFO:             kaleido: 0.2.1
2024-09-16 23:40:13,388:INFO:           schemdraw: 0.15
2024-09-16 23:40:13,388:INFO:         statsmodels: 0.14.2
2024-09-16 23:40:13,388:INFO:              sktime: 0.26.0
2024-09-16 23:40:13,388:INFO:               tbats: 1.1.3
2024-09-16 23:40:13,388:INFO:            pmdarima: 2.0.4
2024-09-16 23:40:13,388:INFO:              psutil: 5.9.5
2024-09-16 23:40:13,389:INFO:          markupsafe: 2.1.3
2024-09-16 23:40:13,389:INFO:             pickle5: Not installed
2024-09-16 23:40:13,389:INFO:         cloudpickle: 3.0.0
2024-09-16 23:40:13,389:INFO:         deprecation: 2.1.0
2024-09-16 23:40:13,390:INFO:              xxhash: 3.4.1
2024-09-16 23:40:13,390:INFO:           wurlitzer: 3.1.0
2024-09-16 23:40:13,390:INFO:PyCaret optional dependencies:
2024-09-16 23:40:13,390:INFO:                shap: Not installed
2024-09-16 23:40:13,390:INFO:           interpret: Not installed
2024-09-16 23:40:13,391:INFO:                umap: Not installed
2024-09-16 23:40:13,391:INFO:     ydata_profiling: Not installed
2024-09-16 23:40:13,391:INFO:  explainerdashboard: Not installed
2024-09-16 23:40:13,391:INFO:             autoviz: Not installed
2024-09-16 23:40:13,391:INFO:           fairlearn: Not installed
2024-09-16 23:40:13,392:INFO:          deepchecks: Not installed
2024-09-16 23:40:13,392:INFO:             xgboost: Not installed
2024-09-16 23:40:13,392:INFO:            catboost: Not installed
2024-09-16 23:40:13,392:INFO:              kmodes: Not installed
2024-09-16 23:40:13,392:INFO:             mlxtend: Not installed
2024-09-16 23:40:13,392:INFO:       statsforecast: Not installed
2024-09-16 23:40:13,393:INFO:        tune_sklearn: Not installed
2024-09-16 23:40:13,393:INFO:                 ray: Not installed
2024-09-16 23:40:13,393:INFO:            hyperopt: Not installed
2024-09-16 23:40:13,393:INFO:              optuna: Not installed
2024-09-16 23:40:13,393:INFO:               skopt: Not installed
2024-09-16 23:40:13,393:INFO:              mlflow: Not installed
2024-09-16 23:40:13,394:INFO:              gradio: Not installed
2024-09-16 23:40:13,394:INFO:             fastapi: 0.104.1
2024-09-16 23:40:13,394:INFO:             uvicorn: Not installed
2024-09-16 23:40:13,395:INFO:              m2cgen: Not installed
2024-09-16 23:40:13,395:INFO:           evidently: Not installed
2024-09-16 23:40:13,395:INFO:               fugue: Not installed
2024-09-16 23:40:13,395:INFO:           streamlit: Not installed
2024-09-16 23:40:13,395:INFO:             prophet: Not installed
2024-09-16 23:40:13,396:INFO:None
2024-09-16 23:40:13,396:INFO:Set up data.
2024-09-16 23:40:27,929:INFO:PyCaret ClassificationExperiment
2024-09-16 23:40:27,930:INFO:Logging name: clf-default-name
2024-09-16 23:40:27,930:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:40:27,930:INFO:version 3.3.2
2024-09-16 23:40:27,931:INFO:Initializing setup()
2024-09-16 23:40:27,931:INFO:self.USI: 017c
2024-09-16 23:40:27,931:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:40:27,931:INFO:Checking environment
2024-09-16 23:40:27,931:INFO:python_version: 3.11.5
2024-09-16 23:40:27,932:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:40:27,932:INFO:machine: AMD64
2024-09-16 23:40:27,932:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:40:27,937:INFO:Memory: svmem(total=8000290816, available=448147456, percent=94.4, used=7552143360, free=448147456)
2024-09-16 23:40:27,938:INFO:Physical Core: 2
2024-09-16 23:40:27,938:INFO:Logical Core: 4
2024-09-16 23:40:27,938:INFO:Checking libraries
2024-09-16 23:40:27,938:INFO:System:
2024-09-16 23:40:27,939:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:40:27,939:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:40:27,939:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:40:27,939:INFO:PyCaret required dependencies:
2024-09-16 23:40:27,939:INFO:                 pip: 24.0
2024-09-16 23:40:27,940:INFO:          setuptools: 65.5.0
2024-09-16 23:40:27,940:INFO:             pycaret: 3.3.2
2024-09-16 23:40:27,940:INFO:             IPython: 8.15.0
2024-09-16 23:40:27,940:INFO:          ipywidgets: 8.1.3
2024-09-16 23:40:27,940:INFO:                tqdm: 4.66.4
2024-09-16 23:40:27,940:INFO:               numpy: 1.25.2
2024-09-16 23:40:27,941:INFO:              pandas: 2.1.4
2024-09-16 23:40:27,941:INFO:              jinja2: 3.1.2
2024-09-16 23:40:27,941:INFO:               scipy: 1.11.2
2024-09-16 23:40:27,941:INFO:              joblib: 1.3.2
2024-09-16 23:40:27,941:INFO:             sklearn: 1.4.2
2024-09-16 23:40:27,942:INFO:                pyod: 2.0.0
2024-09-16 23:40:27,942:INFO:            imblearn: 0.12.3
2024-09-16 23:40:27,942:INFO:   category_encoders: 2.6.3
2024-09-16 23:40:27,942:INFO:            lightgbm: 4.3.0
2024-09-16 23:40:27,942:INFO:               numba: 0.59.1
2024-09-16 23:40:27,942:INFO:            requests: 2.31.0
2024-09-16 23:40:27,943:INFO:          matplotlib: 3.7.2
2024-09-16 23:40:27,943:INFO:          scikitplot: 0.3.7
2024-09-16 23:40:27,943:INFO:         yellowbrick: 1.5
2024-09-16 23:40:27,943:INFO:              plotly: 5.22.0
2024-09-16 23:40:27,943:INFO:    plotly-resampler: Not installed
2024-09-16 23:40:27,943:INFO:             kaleido: 0.2.1
2024-09-16 23:40:27,944:INFO:           schemdraw: 0.15
2024-09-16 23:40:27,944:INFO:         statsmodels: 0.14.2
2024-09-16 23:40:27,944:INFO:              sktime: 0.26.0
2024-09-16 23:40:27,944:INFO:               tbats: 1.1.3
2024-09-16 23:40:27,944:INFO:            pmdarima: 2.0.4
2024-09-16 23:40:27,945:INFO:              psutil: 5.9.5
2024-09-16 23:40:27,945:INFO:          markupsafe: 2.1.3
2024-09-16 23:40:27,945:INFO:             pickle5: Not installed
2024-09-16 23:40:27,945:INFO:         cloudpickle: 3.0.0
2024-09-16 23:40:27,946:INFO:         deprecation: 2.1.0
2024-09-16 23:40:27,946:INFO:              xxhash: 3.4.1
2024-09-16 23:40:27,946:INFO:           wurlitzer: 3.1.0
2024-09-16 23:40:27,946:INFO:PyCaret optional dependencies:
2024-09-16 23:40:27,947:INFO:                shap: Not installed
2024-09-16 23:40:27,947:INFO:           interpret: Not installed
2024-09-16 23:40:27,947:INFO:                umap: Not installed
2024-09-16 23:40:27,947:INFO:     ydata_profiling: Not installed
2024-09-16 23:40:27,947:INFO:  explainerdashboard: Not installed
2024-09-16 23:40:27,948:INFO:             autoviz: Not installed
2024-09-16 23:40:27,948:INFO:           fairlearn: Not installed
2024-09-16 23:40:27,948:INFO:          deepchecks: Not installed
2024-09-16 23:40:27,948:INFO:             xgboost: Not installed
2024-09-16 23:40:27,948:INFO:            catboost: Not installed
2024-09-16 23:40:27,948:INFO:              kmodes: Not installed
2024-09-16 23:40:27,948:INFO:             mlxtend: Not installed
2024-09-16 23:40:27,949:INFO:       statsforecast: Not installed
2024-09-16 23:40:27,949:INFO:        tune_sklearn: Not installed
2024-09-16 23:40:27,949:INFO:                 ray: Not installed
2024-09-16 23:40:27,949:INFO:            hyperopt: Not installed
2024-09-16 23:40:27,949:INFO:              optuna: Not installed
2024-09-16 23:40:27,949:INFO:               skopt: Not installed
2024-09-16 23:40:27,950:INFO:              mlflow: Not installed
2024-09-16 23:40:27,950:INFO:              gradio: Not installed
2024-09-16 23:40:27,950:INFO:             fastapi: 0.104.1
2024-09-16 23:40:27,950:INFO:             uvicorn: Not installed
2024-09-16 23:40:27,950:INFO:              m2cgen: Not installed
2024-09-16 23:40:27,951:INFO:           evidently: Not installed
2024-09-16 23:40:27,951:INFO:               fugue: Not installed
2024-09-16 23:40:27,951:INFO:           streamlit: Not installed
2024-09-16 23:40:27,951:INFO:             prophet: Not installed
2024-09-16 23:40:27,951:INFO:None
2024-09-16 23:40:27,951:INFO:Set up data.
2024-09-16 23:41:02,429:INFO:PyCaret ClassificationExperiment
2024-09-16 23:41:02,429:INFO:Logging name: clf-default-name
2024-09-16 23:41:02,429:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:41:02,429:INFO:version 3.3.2
2024-09-16 23:41:02,430:INFO:Initializing setup()
2024-09-16 23:41:02,430:INFO:self.USI: bc45
2024-09-16 23:41:02,430:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:41:02,430:INFO:Checking environment
2024-09-16 23:41:02,430:INFO:python_version: 3.11.5
2024-09-16 23:41:02,430:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:41:02,431:INFO:machine: AMD64
2024-09-16 23:41:02,431:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:41:02,436:INFO:Memory: svmem(total=8000290816, available=437665792, percent=94.5, used=7562625024, free=437665792)
2024-09-16 23:41:02,436:INFO:Physical Core: 2
2024-09-16 23:41:02,436:INFO:Logical Core: 4
2024-09-16 23:41:02,437:INFO:Checking libraries
2024-09-16 23:41:02,437:INFO:System:
2024-09-16 23:41:02,437:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:41:02,437:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:41:02,437:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:41:02,438:INFO:PyCaret required dependencies:
2024-09-16 23:41:02,438:INFO:                 pip: 24.0
2024-09-16 23:41:02,438:INFO:          setuptools: 65.5.0
2024-09-16 23:41:02,438:INFO:             pycaret: 3.3.2
2024-09-16 23:41:02,438:INFO:             IPython: 8.15.0
2024-09-16 23:41:02,439:INFO:          ipywidgets: 8.1.3
2024-09-16 23:41:02,439:INFO:                tqdm: 4.66.4
2024-09-16 23:41:02,439:INFO:               numpy: 1.25.2
2024-09-16 23:41:02,439:INFO:              pandas: 2.1.4
2024-09-16 23:41:02,439:INFO:              jinja2: 3.1.2
2024-09-16 23:41:02,440:INFO:               scipy: 1.11.2
2024-09-16 23:41:02,440:INFO:              joblib: 1.3.2
2024-09-16 23:41:02,440:INFO:             sklearn: 1.4.2
2024-09-16 23:41:02,440:INFO:                pyod: 2.0.0
2024-09-16 23:41:02,441:INFO:            imblearn: 0.12.3
2024-09-16 23:41:02,441:INFO:   category_encoders: 2.6.3
2024-09-16 23:41:02,441:INFO:            lightgbm: 4.3.0
2024-09-16 23:41:02,441:INFO:               numba: 0.59.1
2024-09-16 23:41:02,442:INFO:            requests: 2.31.0
2024-09-16 23:41:02,442:INFO:          matplotlib: 3.7.2
2024-09-16 23:41:02,442:INFO:          scikitplot: 0.3.7
2024-09-16 23:41:02,442:INFO:         yellowbrick: 1.5
2024-09-16 23:41:02,442:INFO:              plotly: 5.22.0
2024-09-16 23:41:02,443:INFO:    plotly-resampler: Not installed
2024-09-16 23:41:02,443:INFO:             kaleido: 0.2.1
2024-09-16 23:41:02,443:INFO:           schemdraw: 0.15
2024-09-16 23:41:02,443:INFO:         statsmodels: 0.14.2
2024-09-16 23:41:02,443:INFO:              sktime: 0.26.0
2024-09-16 23:41:02,443:INFO:               tbats: 1.1.3
2024-09-16 23:41:02,443:INFO:            pmdarima: 2.0.4
2024-09-16 23:41:02,444:INFO:              psutil: 5.9.5
2024-09-16 23:41:02,444:INFO:          markupsafe: 2.1.3
2024-09-16 23:41:02,444:INFO:             pickle5: Not installed
2024-09-16 23:41:02,445:INFO:         cloudpickle: 3.0.0
2024-09-16 23:41:02,445:INFO:         deprecation: 2.1.0
2024-09-16 23:41:02,445:INFO:              xxhash: 3.4.1
2024-09-16 23:41:02,445:INFO:           wurlitzer: 3.1.0
2024-09-16 23:41:02,446:INFO:PyCaret optional dependencies:
2024-09-16 23:41:02,446:INFO:                shap: Not installed
2024-09-16 23:41:02,446:INFO:           interpret: Not installed
2024-09-16 23:41:02,446:INFO:                umap: Not installed
2024-09-16 23:41:02,447:INFO:     ydata_profiling: Not installed
2024-09-16 23:41:02,447:INFO:  explainerdashboard: Not installed
2024-09-16 23:41:02,447:INFO:             autoviz: Not installed
2024-09-16 23:41:02,447:INFO:           fairlearn: Not installed
2024-09-16 23:41:02,447:INFO:          deepchecks: Not installed
2024-09-16 23:41:02,447:INFO:             xgboost: Not installed
2024-09-16 23:41:02,448:INFO:            catboost: Not installed
2024-09-16 23:41:02,448:INFO:              kmodes: Not installed
2024-09-16 23:41:02,448:INFO:             mlxtend: Not installed
2024-09-16 23:41:02,448:INFO:       statsforecast: Not installed
2024-09-16 23:41:02,448:INFO:        tune_sklearn: Not installed
2024-09-16 23:41:02,448:INFO:                 ray: Not installed
2024-09-16 23:41:02,448:INFO:            hyperopt: Not installed
2024-09-16 23:41:02,449:INFO:              optuna: Not installed
2024-09-16 23:41:02,449:INFO:               skopt: Not installed
2024-09-16 23:41:02,449:INFO:              mlflow: Not installed
2024-09-16 23:41:02,449:INFO:              gradio: Not installed
2024-09-16 23:41:02,449:INFO:             fastapi: 0.104.1
2024-09-16 23:41:02,449:INFO:             uvicorn: Not installed
2024-09-16 23:41:02,450:INFO:              m2cgen: Not installed
2024-09-16 23:41:02,450:INFO:           evidently: Not installed
2024-09-16 23:41:02,450:INFO:               fugue: Not installed
2024-09-16 23:41:02,450:INFO:           streamlit: Not installed
2024-09-16 23:41:02,450:INFO:             prophet: Not installed
2024-09-16 23:41:02,450:INFO:None
2024-09-16 23:41:02,450:INFO:Set up data.
2024-09-16 23:41:02,484:INFO:Set up folding strategy.
2024-09-16 23:41:02,484:INFO:Set up train/test split.
2024-09-16 23:41:02,581:INFO:Set up index.
2024-09-16 23:41:02,581:INFO:Assigning column types.
2024-09-16 23:41:02,598:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-16 23:41:03,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:41:03,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:41:03,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:03,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:04,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:41:04,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:41:04,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:04,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:04,271:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-16 23:41:04,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:41:04,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:04,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:04,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:41:05,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,060:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-16 23:41:05,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:05,580:INFO:Preparing preprocessing pipeline...
2024-09-16 23:41:05,585:INFO:Set up label encoding.
2024-09-16 23:41:05,585:INFO:Set up simple imputation.
2024-09-16 23:41:05,591:INFO:Set up encoding of categorical features.
2024-09-16 23:41:05,791:INFO:Finished creating preprocessing pipeline.
2024-09-16 23:41:05,821:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-09-16 23:41:05,822:INFO:Creating final display dataframe.
2024-09-16 23:41:06,421:INFO:Setup _display_container:                     Description                                  Value
0                    Session id                                    123
1                        Target                                  Plano
2                   Target type                                 Binary
3                Target mapping  Plano Conexão: 0, Plano Equilíbrio: 1
4           Original data shape                               (76, 11)
5        Transformed data shape                               (76, 13)
6   Transformed train set shape                               (53, 13)
7    Transformed test set shape                               (23, 13)
8              Numeric features                                      7
9          Categorical features                                      3
10                   Preprocess                                   True
11              Imputation type                                 simple
12           Numeric imputation                                   mean
13       Categorical imputation                                   mode
14     Maximum one-hot encoding                                     25
15              Encoding method                                   None
16               Fold Generator                        StratifiedKFold
17                  Fold Number                                     10
18                     CPU Jobs                                     -1
19                      Use GPU                                  False
20               Log Experiment                                  False
21              Experiment Name                       clf-default-name
22                          USI                                   bc45
2024-09-16 23:41:06,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:06,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:07,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:07,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:41:07,012:INFO:setup() successfully completed in 4.58s...............
2024-09-16 23:41:07,028:INFO:Initializing save_model()
2024-09-16 23:41:07,028:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), model_name=Modelo_RFC, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-16 23:41:07,028:INFO:Adding model into prep_pipe
2024-09-16 23:41:07,166:INFO:Modelo_RFC.pkl saved in current working directory
2024-09-16 23:41:07,196:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes',
                                             'Idade'],
                                    transformer=SimpleImputer(add_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-16 23:41:07,197:INFO:save_model() successfully completed......................................
2024-09-16 23:45:49,589:INFO:PyCaret ClassificationExperiment
2024-09-16 23:45:49,589:INFO:Logging name: clf-default-name
2024-09-16 23:45:49,590:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:45:49,590:INFO:version 3.3.2
2024-09-16 23:45:49,590:INFO:Initializing setup()
2024-09-16 23:45:49,591:INFO:self.USI: dbca
2024-09-16 23:45:49,591:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:45:49,591:INFO:Checking environment
2024-09-16 23:45:49,592:INFO:python_version: 3.11.5
2024-09-16 23:45:49,592:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:45:49,592:INFO:machine: AMD64
2024-09-16 23:45:49,592:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:45:49,598:INFO:Memory: svmem(total=8000290816, available=324214784, percent=95.9, used=7676076032, free=324214784)
2024-09-16 23:45:49,598:INFO:Physical Core: 2
2024-09-16 23:45:49,598:INFO:Logical Core: 4
2024-09-16 23:45:49,598:INFO:Checking libraries
2024-09-16 23:45:49,598:INFO:System:
2024-09-16 23:45:49,599:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:45:49,599:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:45:49,599:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:45:49,599:INFO:PyCaret required dependencies:
2024-09-16 23:45:49,599:INFO:                 pip: 24.0
2024-09-16 23:45:49,600:INFO:          setuptools: 65.5.0
2024-09-16 23:45:49,600:INFO:             pycaret: 3.3.2
2024-09-16 23:45:49,600:INFO:             IPython: 8.15.0
2024-09-16 23:45:49,600:INFO:          ipywidgets: 8.1.3
2024-09-16 23:45:49,600:INFO:                tqdm: 4.66.4
2024-09-16 23:45:49,601:INFO:               numpy: 1.25.2
2024-09-16 23:45:49,601:INFO:              pandas: 2.1.4
2024-09-16 23:45:49,601:INFO:              jinja2: 3.1.2
2024-09-16 23:45:49,601:INFO:               scipy: 1.11.2
2024-09-16 23:45:49,601:INFO:              joblib: 1.3.2
2024-09-16 23:45:49,602:INFO:             sklearn: 1.4.2
2024-09-16 23:45:49,602:INFO:                pyod: 2.0.0
2024-09-16 23:45:49,602:INFO:            imblearn: 0.12.3
2024-09-16 23:45:49,602:INFO:   category_encoders: 2.6.3
2024-09-16 23:45:49,603:INFO:            lightgbm: 4.3.0
2024-09-16 23:45:49,603:INFO:               numba: 0.59.1
2024-09-16 23:45:49,603:INFO:            requests: 2.31.0
2024-09-16 23:45:49,603:INFO:          matplotlib: 3.7.2
2024-09-16 23:45:49,603:INFO:          scikitplot: 0.3.7
2024-09-16 23:45:49,603:INFO:         yellowbrick: 1.5
2024-09-16 23:45:49,604:INFO:              plotly: 5.22.0
2024-09-16 23:45:49,604:INFO:    plotly-resampler: Not installed
2024-09-16 23:45:49,604:INFO:             kaleido: 0.2.1
2024-09-16 23:45:49,604:INFO:           schemdraw: 0.15
2024-09-16 23:45:49,604:INFO:         statsmodels: 0.14.2
2024-09-16 23:45:49,605:INFO:              sktime: 0.26.0
2024-09-16 23:45:49,605:INFO:               tbats: 1.1.3
2024-09-16 23:45:49,605:INFO:            pmdarima: 2.0.4
2024-09-16 23:45:49,605:INFO:              psutil: 5.9.5
2024-09-16 23:45:49,605:INFO:          markupsafe: 2.1.3
2024-09-16 23:45:49,605:INFO:             pickle5: Not installed
2024-09-16 23:45:49,606:INFO:         cloudpickle: 3.0.0
2024-09-16 23:45:49,606:INFO:         deprecation: 2.1.0
2024-09-16 23:45:49,606:INFO:              xxhash: 3.4.1
2024-09-16 23:45:49,606:INFO:           wurlitzer: 3.1.0
2024-09-16 23:45:49,606:INFO:PyCaret optional dependencies:
2024-09-16 23:45:49,607:INFO:                shap: Not installed
2024-09-16 23:45:49,607:INFO:           interpret: Not installed
2024-09-16 23:45:49,607:INFO:                umap: Not installed
2024-09-16 23:45:49,607:INFO:     ydata_profiling: Not installed
2024-09-16 23:45:49,607:INFO:  explainerdashboard: Not installed
2024-09-16 23:45:49,607:INFO:             autoviz: Not installed
2024-09-16 23:45:49,608:INFO:           fairlearn: Not installed
2024-09-16 23:45:49,608:INFO:          deepchecks: Not installed
2024-09-16 23:45:49,608:INFO:             xgboost: Not installed
2024-09-16 23:45:49,608:INFO:            catboost: Not installed
2024-09-16 23:45:49,608:INFO:              kmodes: Not installed
2024-09-16 23:45:49,608:INFO:             mlxtend: Not installed
2024-09-16 23:45:49,609:INFO:       statsforecast: Not installed
2024-09-16 23:45:49,609:INFO:        tune_sklearn: Not installed
2024-09-16 23:45:49,609:INFO:                 ray: Not installed
2024-09-16 23:45:49,609:INFO:            hyperopt: Not installed
2024-09-16 23:45:49,609:INFO:              optuna: Not installed
2024-09-16 23:45:49,610:INFO:               skopt: Not installed
2024-09-16 23:45:49,610:INFO:              mlflow: Not installed
2024-09-16 23:45:49,610:INFO:              gradio: Not installed
2024-09-16 23:45:49,614:INFO:             fastapi: 0.104.1
2024-09-16 23:45:49,615:INFO:             uvicorn: Not installed
2024-09-16 23:45:49,615:INFO:              m2cgen: Not installed
2024-09-16 23:45:49,615:INFO:           evidently: Not installed
2024-09-16 23:45:49,615:INFO:               fugue: Not installed
2024-09-16 23:45:49,616:INFO:           streamlit: Not installed
2024-09-16 23:45:49,616:INFO:             prophet: Not installed
2024-09-16 23:45:49,616:INFO:None
2024-09-16 23:45:49,617:INFO:Set up data.
2024-09-16 23:47:02,809:INFO:PyCaret ClassificationExperiment
2024-09-16 23:47:02,810:INFO:Logging name: clf-default-name
2024-09-16 23:47:02,810:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:47:02,810:INFO:version 3.3.2
2024-09-16 23:47:02,810:INFO:Initializing setup()
2024-09-16 23:47:02,811:INFO:self.USI: 5192
2024-09-16 23:47:02,811:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:47:02,811:INFO:Checking environment
2024-09-16 23:47:02,811:INFO:python_version: 3.11.5
2024-09-16 23:47:02,812:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:47:02,812:INFO:machine: AMD64
2024-09-16 23:47:02,812:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:47:02,817:INFO:Memory: svmem(total=8000290816, available=339304448, percent=95.8, used=7660986368, free=339304448)
2024-09-16 23:47:02,817:INFO:Physical Core: 2
2024-09-16 23:47:02,818:INFO:Logical Core: 4
2024-09-16 23:47:02,818:INFO:Checking libraries
2024-09-16 23:47:02,818:INFO:System:
2024-09-16 23:47:02,818:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:47:02,819:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:47:02,819:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:47:02,819:INFO:PyCaret required dependencies:
2024-09-16 23:47:02,819:INFO:                 pip: 24.0
2024-09-16 23:47:02,819:INFO:          setuptools: 65.5.0
2024-09-16 23:47:02,820:INFO:             pycaret: 3.3.2
2024-09-16 23:47:02,820:INFO:             IPython: 8.15.0
2024-09-16 23:47:02,820:INFO:          ipywidgets: 8.1.3
2024-09-16 23:47:02,820:INFO:                tqdm: 4.66.4
2024-09-16 23:47:02,820:INFO:               numpy: 1.25.2
2024-09-16 23:47:02,821:INFO:              pandas: 2.1.4
2024-09-16 23:47:02,821:INFO:              jinja2: 3.1.2
2024-09-16 23:47:02,822:INFO:               scipy: 1.11.2
2024-09-16 23:47:02,822:INFO:              joblib: 1.3.2
2024-09-16 23:47:02,822:INFO:             sklearn: 1.4.2
2024-09-16 23:47:02,822:INFO:                pyod: 2.0.0
2024-09-16 23:47:02,823:INFO:            imblearn: 0.12.3
2024-09-16 23:47:02,823:INFO:   category_encoders: 2.6.3
2024-09-16 23:47:02,823:INFO:            lightgbm: 4.3.0
2024-09-16 23:47:02,824:INFO:               numba: 0.59.1
2024-09-16 23:47:02,824:INFO:            requests: 2.31.0
2024-09-16 23:47:02,824:INFO:          matplotlib: 3.7.2
2024-09-16 23:47:02,824:INFO:          scikitplot: 0.3.7
2024-09-16 23:47:02,825:INFO:         yellowbrick: 1.5
2024-09-16 23:47:02,825:INFO:              plotly: 5.22.0
2024-09-16 23:47:02,825:INFO:    plotly-resampler: Not installed
2024-09-16 23:47:02,825:INFO:             kaleido: 0.2.1
2024-09-16 23:47:02,825:INFO:           schemdraw: 0.15
2024-09-16 23:47:02,826:INFO:         statsmodels: 0.14.2
2024-09-16 23:47:02,826:INFO:              sktime: 0.26.0
2024-09-16 23:47:02,826:INFO:               tbats: 1.1.3
2024-09-16 23:47:02,826:INFO:            pmdarima: 2.0.4
2024-09-16 23:47:02,826:INFO:              psutil: 5.9.5
2024-09-16 23:47:02,826:INFO:          markupsafe: 2.1.3
2024-09-16 23:47:02,827:INFO:             pickle5: Not installed
2024-09-16 23:47:02,827:INFO:         cloudpickle: 3.0.0
2024-09-16 23:47:02,827:INFO:         deprecation: 2.1.0
2024-09-16 23:47:02,827:INFO:              xxhash: 3.4.1
2024-09-16 23:47:02,827:INFO:           wurlitzer: 3.1.0
2024-09-16 23:47:02,827:INFO:PyCaret optional dependencies:
2024-09-16 23:47:02,828:INFO:                shap: Not installed
2024-09-16 23:47:02,828:INFO:           interpret: Not installed
2024-09-16 23:47:02,828:INFO:                umap: Not installed
2024-09-16 23:47:02,828:INFO:     ydata_profiling: Not installed
2024-09-16 23:47:02,828:INFO:  explainerdashboard: Not installed
2024-09-16 23:47:02,828:INFO:             autoviz: Not installed
2024-09-16 23:47:02,829:INFO:           fairlearn: Not installed
2024-09-16 23:47:02,829:INFO:          deepchecks: Not installed
2024-09-16 23:47:02,829:INFO:             xgboost: Not installed
2024-09-16 23:47:02,829:INFO:            catboost: Not installed
2024-09-16 23:47:02,829:INFO:              kmodes: Not installed
2024-09-16 23:47:02,837:INFO:             mlxtend: Not installed
2024-09-16 23:47:02,838:INFO:       statsforecast: Not installed
2024-09-16 23:47:02,838:INFO:        tune_sklearn: Not installed
2024-09-16 23:47:02,838:INFO:                 ray: Not installed
2024-09-16 23:47:02,838:INFO:            hyperopt: Not installed
2024-09-16 23:47:02,838:INFO:              optuna: Not installed
2024-09-16 23:47:02,838:INFO:               skopt: Not installed
2024-09-16 23:47:02,839:INFO:              mlflow: Not installed
2024-09-16 23:47:02,839:INFO:              gradio: Not installed
2024-09-16 23:47:02,839:INFO:             fastapi: 0.104.1
2024-09-16 23:47:02,839:INFO:             uvicorn: Not installed
2024-09-16 23:47:02,839:INFO:              m2cgen: Not installed
2024-09-16 23:47:02,839:INFO:           evidently: Not installed
2024-09-16 23:47:02,839:INFO:               fugue: Not installed
2024-09-16 23:47:02,840:INFO:           streamlit: Not installed
2024-09-16 23:47:02,840:INFO:             prophet: Not installed
2024-09-16 23:47:02,840:INFO:None
2024-09-16 23:47:02,840:INFO:Set up data.
2024-09-16 23:47:03,447:INFO:Set up folding strategy.
2024-09-16 23:47:03,448:INFO:Set up train/test split.
2024-09-16 23:47:03,671:INFO:Set up index.
2024-09-16 23:47:03,748:INFO:Assigning column types.
2024-09-16 23:47:03,864:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-16 23:47:04,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:47:04,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:04,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:04,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:04,735:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:47:04,741:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:04,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:04,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:04,884:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-16 23:47:05,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:05,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:05,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:05,425:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:05,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:05,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:05,586:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-16 23:47:05,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:05,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:06,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:06,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:06,513:INFO:Preparing preprocessing pipeline...
2024-09-16 23:47:06,549:INFO:Set up label encoding.
2024-09-16 23:47:06,549:INFO:Set up simple imputation.
2024-09-16 23:47:06,560:INFO:Set up encoding of categorical features.
2024-09-16 23:47:08,693:INFO:Finished creating preprocessing pipeline.
2024-09-16 23:47:08,713:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-09-16 23:47:08,713:INFO:Creating final display dataframe.
2024-09-16 23:47:09,176:INFO:Setup _display_container:                     Description                                  Value
0                    Session id                                    123
1                        Target                                  Plano
2                   Target type                                 Binary
3                Target mapping  Plano Conexão: 0, Plano Equilíbrio: 1
4           Original data shape                               (76, 11)
5        Transformed data shape                               (76, 13)
6   Transformed train set shape                               (53, 13)
7    Transformed test set shape                               (23, 13)
8              Numeric features                                      7
9          Categorical features                                      3
10                   Preprocess                                   True
11              Imputation type                                 simple
12           Numeric imputation                                   mean
13       Categorical imputation                                   mode
14     Maximum one-hot encoding                                     25
15              Encoding method                                   None
16               Fold Generator                        StratifiedKFold
17                  Fold Number                                     10
18                     CPU Jobs                                     -1
19                      Use GPU                                  False
20               Log Experiment                                  False
21              Experiment Name                       clf-default-name
22                          USI                                   5192
2024-09-16 23:47:09,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:09,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:10,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:10,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:10,357:INFO:setup() successfully completed in 7.55s...............
2024-09-16 23:47:10,387:INFO:Initializing save_model()
2024-09-16 23:47:10,388:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=Modelo_LR, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-16 23:47:10,388:INFO:Adding model into prep_pipe
2024-09-16 23:47:10,465:INFO:Modelo_LR.pkl saved in current working directory
2024-09-16 23:47:10,487:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes',
                                             'Idade'],
                                    transformer=SimpleImputer(add_...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-09-16 23:47:10,487:INFO:save_model() successfully completed......................................
2024-09-16 23:47:29,904:INFO:PyCaret ClassificationExperiment
2024-09-16 23:47:29,904:INFO:Logging name: clf-default-name
2024-09-16 23:47:29,904:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:47:29,905:INFO:version 3.3.2
2024-09-16 23:47:29,905:INFO:Initializing setup()
2024-09-16 23:47:29,905:INFO:self.USI: 72b2
2024-09-16 23:47:29,905:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'exp_name_log', 'fold_groups_param', 'seed', 'data', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'html_param', 'fold_shuffle_param', 'USI', 'logging_param', 'fold_generator', 'idx', 'X_train', 'pipeline', 'gpu_n_jobs_param', 'y', 'y_train', 'X', 'y_test', 'memory', '_available_plots', 'is_multiclass', 'target_param', 'gpu_param', '_ml_usecase'}
2024-09-16 23:47:29,905:INFO:Checking environment
2024-09-16 23:47:29,905:INFO:python_version: 3.11.5
2024-09-16 23:47:29,906:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:47:29,906:INFO:machine: AMD64
2024-09-16 23:47:29,906:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:47:29,911:INFO:Memory: svmem(total=8000290816, available=503201792, percent=93.7, used=7497089024, free=503201792)
2024-09-16 23:47:29,911:INFO:Physical Core: 2
2024-09-16 23:47:29,911:INFO:Logical Core: 4
2024-09-16 23:47:29,912:INFO:Checking libraries
2024-09-16 23:47:29,912:INFO:System:
2024-09-16 23:47:29,912:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:47:29,912:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:47:29,912:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:47:29,912:INFO:PyCaret required dependencies:
2024-09-16 23:47:29,913:INFO:                 pip: 24.0
2024-09-16 23:47:29,913:INFO:          setuptools: 65.5.0
2024-09-16 23:47:29,913:INFO:             pycaret: 3.3.2
2024-09-16 23:47:29,913:INFO:             IPython: 8.15.0
2024-09-16 23:47:29,913:INFO:          ipywidgets: 8.1.3
2024-09-16 23:47:29,913:INFO:                tqdm: 4.66.4
2024-09-16 23:47:29,914:INFO:               numpy: 1.25.2
2024-09-16 23:47:29,914:INFO:              pandas: 2.1.4
2024-09-16 23:47:29,914:INFO:              jinja2: 3.1.2
2024-09-16 23:47:29,914:INFO:               scipy: 1.11.2
2024-09-16 23:47:29,914:INFO:              joblib: 1.3.2
2024-09-16 23:47:29,915:INFO:             sklearn: 1.4.2
2024-09-16 23:47:29,915:INFO:                pyod: 2.0.0
2024-09-16 23:47:29,915:INFO:            imblearn: 0.12.3
2024-09-16 23:47:29,915:INFO:   category_encoders: 2.6.3
2024-09-16 23:47:29,916:INFO:            lightgbm: 4.3.0
2024-09-16 23:47:29,916:INFO:               numba: 0.59.1
2024-09-16 23:47:29,916:INFO:            requests: 2.31.0
2024-09-16 23:47:29,916:INFO:          matplotlib: 3.7.2
2024-09-16 23:47:29,916:INFO:          scikitplot: 0.3.7
2024-09-16 23:47:29,916:INFO:         yellowbrick: 1.5
2024-09-16 23:47:29,917:INFO:              plotly: 5.22.0
2024-09-16 23:47:29,917:INFO:    plotly-resampler: Not installed
2024-09-16 23:47:29,917:INFO:             kaleido: 0.2.1
2024-09-16 23:47:29,917:INFO:           schemdraw: 0.15
2024-09-16 23:47:29,917:INFO:         statsmodels: 0.14.2
2024-09-16 23:47:29,918:INFO:              sktime: 0.26.0
2024-09-16 23:47:29,918:INFO:               tbats: 1.1.3
2024-09-16 23:47:29,918:INFO:            pmdarima: 2.0.4
2024-09-16 23:47:29,918:INFO:              psutil: 5.9.5
2024-09-16 23:47:29,918:INFO:          markupsafe: 2.1.3
2024-09-16 23:47:29,918:INFO:             pickle5: Not installed
2024-09-16 23:47:29,919:INFO:         cloudpickle: 3.0.0
2024-09-16 23:47:29,919:INFO:         deprecation: 2.1.0
2024-09-16 23:47:29,919:INFO:              xxhash: 3.4.1
2024-09-16 23:47:29,919:INFO:           wurlitzer: 3.1.0
2024-09-16 23:47:29,923:INFO:PyCaret optional dependencies:
2024-09-16 23:47:29,924:INFO:                shap: Not installed
2024-09-16 23:47:29,924:INFO:           interpret: Not installed
2024-09-16 23:47:29,925:INFO:                umap: Not installed
2024-09-16 23:47:29,925:INFO:     ydata_profiling: Not installed
2024-09-16 23:47:29,926:INFO:  explainerdashboard: Not installed
2024-09-16 23:47:29,926:INFO:             autoviz: Not installed
2024-09-16 23:47:29,926:INFO:           fairlearn: Not installed
2024-09-16 23:47:29,927:INFO:          deepchecks: Not installed
2024-09-16 23:47:29,927:INFO:             xgboost: Not installed
2024-09-16 23:47:29,927:INFO:            catboost: Not installed
2024-09-16 23:47:29,928:INFO:              kmodes: Not installed
2024-09-16 23:47:29,928:INFO:             mlxtend: Not installed
2024-09-16 23:47:29,928:INFO:       statsforecast: Not installed
2024-09-16 23:47:29,928:INFO:        tune_sklearn: Not installed
2024-09-16 23:47:29,929:INFO:                 ray: Not installed
2024-09-16 23:47:29,929:INFO:            hyperopt: Not installed
2024-09-16 23:47:29,929:INFO:              optuna: Not installed
2024-09-16 23:47:29,929:INFO:               skopt: Not installed
2024-09-16 23:47:29,929:INFO:              mlflow: Not installed
2024-09-16 23:47:29,929:INFO:              gradio: Not installed
2024-09-16 23:47:29,930:INFO:             fastapi: 0.104.1
2024-09-16 23:47:29,930:INFO:             uvicorn: Not installed
2024-09-16 23:47:29,930:INFO:              m2cgen: Not installed
2024-09-16 23:47:29,930:INFO:           evidently: Not installed
2024-09-16 23:47:29,930:INFO:               fugue: Not installed
2024-09-16 23:47:29,930:INFO:           streamlit: Not installed
2024-09-16 23:47:29,931:INFO:             prophet: Not installed
2024-09-16 23:47:29,931:INFO:None
2024-09-16 23:47:29,931:INFO:Set up data.
2024-09-16 23:47:29,956:INFO:Set up folding strategy.
2024-09-16 23:47:29,956:INFO:Set up train/test split.
2024-09-16 23:47:29,992:INFO:Set up index.
2024-09-16 23:47:29,992:INFO:Assigning column types.
2024-09-16 23:47:30,025:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-16 23:47:30,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:47:30,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:30,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:30,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:30,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:47:30,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:31,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,013:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-16 23:47:31,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:31,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:47:31,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,626:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-16 23:47:31,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:31,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:32,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:32,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:32,208:INFO:Preparing preprocessing pipeline...
2024-09-16 23:47:32,209:INFO:Set up label encoding.
2024-09-16 23:47:32,210:INFO:Set up simple imputation.
2024-09-16 23:47:32,216:INFO:Set up encoding of categorical features.
2024-09-16 23:47:32,741:INFO:Finished creating preprocessing pipeline.
2024-09-16 23:47:32,766:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-09-16 23:47:32,766:INFO:Creating final display dataframe.
2024-09-16 23:47:33,986:INFO:Setup _display_container:                     Description                                  Value
0                    Session id                                    123
1                        Target                                  Plano
2                   Target type                                 Binary
3                Target mapping  Plano Conexão: 0, Plano Equilíbrio: 1
4           Original data shape                               (76, 11)
5        Transformed data shape                               (76, 13)
6   Transformed train set shape                               (53, 13)
7    Transformed test set shape                               (23, 13)
8              Numeric features                                      7
9          Categorical features                                      3
10                   Preprocess                                   True
11              Imputation type                                 simple
12           Numeric imputation                                   mean
13       Categorical imputation                                   mode
14     Maximum one-hot encoding                                     25
15              Encoding method                                   None
16               Fold Generator                        StratifiedKFold
17                  Fold Number                                     10
18                     CPU Jobs                                     -1
19                      Use GPU                                  False
20               Log Experiment                                  False
21              Experiment Name                       clf-default-name
22                          USI                                   72b2
2024-09-16 23:47:35,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:35,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:35,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:35,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:47:35,832:INFO:setup() successfully completed in 5.94s...............
2024-09-16 23:47:35,842:INFO:Initializing compare_models()
2024-09-16 23:47:35,842:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-09-16 23:47:35,843:INFO:Checking exceptions
2024-09-16 23:47:35,857:INFO:Preparing display monitor
2024-09-16 23:47:36,086:INFO:Initializing Logistic Regression
2024-09-16 23:47:36,086:INFO:Total runtime is 1.6677379608154298e-05 minutes
2024-09-16 23:47:36,100:INFO:SubProcess create_model() called ==================================
2024-09-16 23:47:36,102:INFO:Initializing create_model()
2024-09-16 23:47:36,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:47:36,103:INFO:Checking exceptions
2024-09-16 23:47:36,103:INFO:Importing libraries
2024-09-16 23:47:36,103:INFO:Copying training dataset
2024-09-16 23:47:36,123:INFO:Defining folds
2024-09-16 23:47:36,124:INFO:Declaring metric variables
2024-09-16 23:47:36,139:INFO:Importing untrained model
2024-09-16 23:47:36,152:INFO:Logistic Regression Imported successfully
2024-09-16 23:47:36,174:INFO:Starting cross validation
2024-09-16 23:47:36,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:00,306:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:00,474:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:00,484:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:00,490:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:00,496:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:01,569:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:01,689:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:01,699:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:01,710:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,154:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:02,289:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,309:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,315:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:02,326:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,548:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:02,554:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:02,805:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,814:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,814:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:02,815:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,820:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:02,826:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,827:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,831:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:02,839:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:02,975:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:03,007:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:03,092:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:04,296:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:04,761:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:04,843:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:04,858:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:04,872:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:05,107:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:05,125:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:05,129:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:05,136:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:05,278:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:05,591:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:05,623:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:05,648:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:05,647:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-09-16 23:48:05,669:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:06,140:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:06,166:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:06,173:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:06,189:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:06,250:INFO:Calculating mean and std
2024-09-16 23:48:06,268:INFO:Creating metrics dataframe
2024-09-16 23:48:06,286:INFO:Uploading results into container
2024-09-16 23:48:06,287:INFO:Uploading model into container now
2024-09-16 23:48:06,288:INFO:_master_model_container: 1
2024-09-16 23:48:06,288:INFO:_display_container: 2
2024-09-16 23:48:06,289:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-16 23:48:06,290:INFO:create_model() successfully completed......................................
2024-09-16 23:48:07,206:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:07,206:INFO:Creating metrics dataframe
2024-09-16 23:48:07,256:INFO:Initializing K Neighbors Classifier
2024-09-16 23:48:07,257:INFO:Total runtime is 0.519540814558665 minutes
2024-09-16 23:48:07,285:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:07,287:INFO:Initializing create_model()
2024-09-16 23:48:07,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:07,288:INFO:Checking exceptions
2024-09-16 23:48:07,289:INFO:Importing libraries
2024-09-16 23:48:07,291:INFO:Copying training dataset
2024-09-16 23:48:07,419:INFO:Defining folds
2024-09-16 23:48:07,421:INFO:Declaring metric variables
2024-09-16 23:48:07,454:INFO:Importing untrained model
2024-09-16 23:48:07,472:INFO:K Neighbors Classifier Imported successfully
2024-09-16 23:48:07,518:INFO:Starting cross validation
2024-09-16 23:48:07,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:08,868:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,875:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,876:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,881:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,885:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,886:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,898:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,901:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:08,906:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:08,990:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:09,945:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:09,955:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:09,966:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,090:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,101:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,102:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,120:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,126:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,130:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,276:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,291:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,348:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,776:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,775:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,786:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,791:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,795:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:10,805:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,811:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,820:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,831:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,847:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:10,897:INFO:Calculating mean and std
2024-09-16 23:48:10,902:INFO:Creating metrics dataframe
2024-09-16 23:48:10,912:INFO:Uploading results into container
2024-09-16 23:48:10,915:INFO:Uploading model into container now
2024-09-16 23:48:10,917:INFO:_master_model_container: 2
2024-09-16 23:48:10,919:INFO:_display_container: 2
2024-09-16 23:48:10,921:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-16 23:48:10,922:INFO:create_model() successfully completed......................................
2024-09-16 23:48:11,252:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:11,253:INFO:Creating metrics dataframe
2024-09-16 23:48:11,280:INFO:Initializing Naive Bayes
2024-09-16 23:48:11,280:INFO:Total runtime is 0.5865875403086345 minutes
2024-09-16 23:48:11,293:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:11,294:INFO:Initializing create_model()
2024-09-16 23:48:11,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:11,295:INFO:Checking exceptions
2024-09-16 23:48:11,295:INFO:Importing libraries
2024-09-16 23:48:11,296:INFO:Copying training dataset
2024-09-16 23:48:11,315:INFO:Defining folds
2024-09-16 23:48:11,316:INFO:Declaring metric variables
2024-09-16 23:48:11,332:INFO:Importing untrained model
2024-09-16 23:48:11,353:INFO:Naive Bayes Imported successfully
2024-09-16 23:48:11,406:INFO:Starting cross validation
2024-09-16 23:48:11,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:12,197:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,205:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,210:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,219:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,234:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,253:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,264:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,264:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,272:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,305:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,344:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,353:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,755:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,765:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,767:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,777:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,784:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,795:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,803:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,815:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,830:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,848:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,858:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:12,869:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,115:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,124:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,132:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,138:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,145:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,154:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:13,177:INFO:Calculating mean and std
2024-09-16 23:48:13,181:INFO:Creating metrics dataframe
2024-09-16 23:48:13,186:INFO:Uploading results into container
2024-09-16 23:48:13,188:INFO:Uploading model into container now
2024-09-16 23:48:13,190:INFO:_master_model_container: 3
2024-09-16 23:48:13,191:INFO:_display_container: 2
2024-09-16 23:48:13,192:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-16 23:48:13,193:INFO:create_model() successfully completed......................................
2024-09-16 23:48:13,496:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:13,497:INFO:Creating metrics dataframe
2024-09-16 23:48:13,523:INFO:Initializing Decision Tree Classifier
2024-09-16 23:48:13,523:INFO:Total runtime is 0.6239750266075135 minutes
2024-09-16 23:48:13,537:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:13,538:INFO:Initializing create_model()
2024-09-16 23:48:13,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:13,542:INFO:Checking exceptions
2024-09-16 23:48:13,542:INFO:Importing libraries
2024-09-16 23:48:13,543:INFO:Copying training dataset
2024-09-16 23:48:13,564:INFO:Defining folds
2024-09-16 23:48:13,564:INFO:Declaring metric variables
2024-09-16 23:48:13,578:INFO:Importing untrained model
2024-09-16 23:48:13,599:INFO:Decision Tree Classifier Imported successfully
2024-09-16 23:48:13,662:INFO:Starting cross validation
2024-09-16 23:48:13,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:14,433:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,445:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,450:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,453:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,464:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,471:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:14,479:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,482:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,494:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,514:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,526:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,531:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:14,536:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:14,566:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,077:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,086:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,098:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,113:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,114:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,117:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:15,124:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,134:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,146:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,146:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,164:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,184:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,198:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,534:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,545:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,552:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,575:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,584:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,595:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:15,668:INFO:Calculating mean and std
2024-09-16 23:48:15,696:INFO:Creating metrics dataframe
2024-09-16 23:48:15,703:INFO:Uploading results into container
2024-09-16 23:48:15,707:INFO:Uploading model into container now
2024-09-16 23:48:15,709:INFO:_master_model_container: 4
2024-09-16 23:48:15,709:INFO:_display_container: 2
2024-09-16 23:48:15,710:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-09-16 23:48:15,710:INFO:create_model() successfully completed......................................
2024-09-16 23:48:16,093:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:16,093:INFO:Creating metrics dataframe
2024-09-16 23:48:16,124:INFO:Initializing SVM - Linear Kernel
2024-09-16 23:48:16,125:INFO:Total runtime is 0.6673385500907898 minutes
2024-09-16 23:48:16,145:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:16,145:INFO:Initializing create_model()
2024-09-16 23:48:16,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:16,146:INFO:Checking exceptions
2024-09-16 23:48:16,146:INFO:Importing libraries
2024-09-16 23:48:16,146:INFO:Copying training dataset
2024-09-16 23:48:16,180:INFO:Defining folds
2024-09-16 23:48:16,180:INFO:Declaring metric variables
2024-09-16 23:48:16,206:INFO:Importing untrained model
2024-09-16 23:48:16,225:INFO:SVM - Linear Kernel Imported successfully
2024-09-16 23:48:16,256:INFO:Starting cross validation
2024-09-16 23:48:16,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:16,939:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,941:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,947:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,949:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,951:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,952:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,953:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:16,957:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:16,962:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,962:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,965:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:16,965:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:16,975:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:16,978:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,440:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,450:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,476:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,492:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:17,493:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,496:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,503:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,506:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,507:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:17,510:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,514:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,518:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,525:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,543:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,843:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,845:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,851:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,855:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,858:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:17,859:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:17,863:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,863:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:17,880:INFO:Calculating mean and std
2024-09-16 23:48:17,883:INFO:Creating metrics dataframe
2024-09-16 23:48:17,895:INFO:Uploading results into container
2024-09-16 23:48:17,897:INFO:Uploading model into container now
2024-09-16 23:48:17,898:INFO:_master_model_container: 5
2024-09-16 23:48:17,898:INFO:_display_container: 2
2024-09-16 23:48:17,900:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-16 23:48:17,904:INFO:create_model() successfully completed......................................
2024-09-16 23:48:18,197:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:18,198:INFO:Creating metrics dataframe
2024-09-16 23:48:18,225:INFO:Initializing Ridge Classifier
2024-09-16 23:48:18,225:INFO:Total runtime is 0.7023428837458293 minutes
2024-09-16 23:48:18,238:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:18,239:INFO:Initializing create_model()
2024-09-16 23:48:18,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:18,240:INFO:Checking exceptions
2024-09-16 23:48:18,243:INFO:Importing libraries
2024-09-16 23:48:18,243:INFO:Copying training dataset
2024-09-16 23:48:18,264:INFO:Defining folds
2024-09-16 23:48:18,264:INFO:Declaring metric variables
2024-09-16 23:48:18,287:INFO:Importing untrained model
2024-09-16 23:48:18,309:INFO:Ridge Classifier Imported successfully
2024-09-16 23:48:18,340:INFO:Starting cross validation
2024-09-16 23:48:18,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:18,799:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,815:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,831:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,839:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:18,845:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,847:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,867:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,876:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:18,876:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,880:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:18,888:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,889:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,906:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,963:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:18,966:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:18,997:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,844:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,880:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,894:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,908:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,913:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,922:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:19,931:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,948:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:19,956:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:19,963:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,002:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,011:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,047:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:20,082:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,665:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,676:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,680:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:20,689:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,695:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,707:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,711:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:20,717:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:20,741:INFO:Calculating mean and std
2024-09-16 23:48:20,745:INFO:Creating metrics dataframe
2024-09-16 23:48:20,763:INFO:Uploading results into container
2024-09-16 23:48:20,764:INFO:Uploading model into container now
2024-09-16 23:48:20,767:INFO:_master_model_container: 6
2024-09-16 23:48:20,767:INFO:_display_container: 2
2024-09-16 23:48:20,768:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-09-16 23:48:20,769:INFO:create_model() successfully completed......................................
2024-09-16 23:48:21,064:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:21,065:INFO:Creating metrics dataframe
2024-09-16 23:48:21,097:INFO:Initializing Random Forest Classifier
2024-09-16 23:48:21,097:INFO:Total runtime is 0.7502011259396871 minutes
2024-09-16 23:48:21,113:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:21,113:INFO:Initializing create_model()
2024-09-16 23:48:21,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:21,114:INFO:Checking exceptions
2024-09-16 23:48:21,117:INFO:Importing libraries
2024-09-16 23:48:21,117:INFO:Copying training dataset
2024-09-16 23:48:21,197:INFO:Defining folds
2024-09-16 23:48:21,197:INFO:Declaring metric variables
2024-09-16 23:48:21,231:INFO:Importing untrained model
2024-09-16 23:48:21,356:INFO:Random Forest Classifier Imported successfully
2024-09-16 23:48:21,388:INFO:Starting cross validation
2024-09-16 23:48:21,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:23,341:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,342:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,352:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,362:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,378:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,386:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:23,392:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,424:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,436:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,444:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,708:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,716:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:23,720:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:23,724:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:24,761:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:24,771:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:24,775:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:24,781:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,094:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,105:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,109:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:25,121:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,128:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,136:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,146:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,234:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,242:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,252:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,947:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,956:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:25,967:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:26,128:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:26,137:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:26,140:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:26,149:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:26,169:INFO:Calculating mean and std
2024-09-16 23:48:26,177:INFO:Creating metrics dataframe
2024-09-16 23:48:26,191:INFO:Uploading results into container
2024-09-16 23:48:26,193:INFO:Uploading model into container now
2024-09-16 23:48:26,196:INFO:_master_model_container: 7
2024-09-16 23:48:26,197:INFO:_display_container: 2
2024-09-16 23:48:26,198:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-09-16 23:48:26,199:INFO:create_model() successfully completed......................................
2024-09-16 23:48:26,533:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:26,533:INFO:Creating metrics dataframe
2024-09-16 23:48:26,568:INFO:Initializing Quadratic Discriminant Analysis
2024-09-16 23:48:26,568:INFO:Total runtime is 0.841390069325765 minutes
2024-09-16 23:48:26,584:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:26,584:INFO:Initializing create_model()
2024-09-16 23:48:26,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:26,585:INFO:Checking exceptions
2024-09-16 23:48:26,587:INFO:Importing libraries
2024-09-16 23:48:26,587:INFO:Copying training dataset
2024-09-16 23:48:26,611:INFO:Defining folds
2024-09-16 23:48:26,611:INFO:Declaring metric variables
2024-09-16 23:48:26,685:INFO:Importing untrained model
2024-09-16 23:48:26,702:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-16 23:48:26,735:INFO:Starting cross validation
2024-09-16 23:48:26,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:27,284:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:27,285:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:27,286:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:27,472:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,485:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,499:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,501:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,522:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,534:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,566:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,588:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,589:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,608:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:27,624:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,636:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:27,657:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,517:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:28,572:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:28,589:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:28,656:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:28,687:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,701:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,715:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,727:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,727:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,736:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,743:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,747:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:28,752:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,753:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,780:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,788:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:28,796:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:28,804:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:29,115:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-16 23:48:29,216:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,227:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,237:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,250:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,261:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,270:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:29,312:INFO:Calculating mean and std
2024-09-16 23:48:29,322:INFO:Creating metrics dataframe
2024-09-16 23:48:29,335:INFO:Uploading results into container
2024-09-16 23:48:29,336:INFO:Uploading model into container now
2024-09-16 23:48:29,337:INFO:_master_model_container: 8
2024-09-16 23:48:29,338:INFO:_display_container: 2
2024-09-16 23:48:29,339:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-16 23:48:29,342:INFO:create_model() successfully completed......................................
2024-09-16 23:48:29,648:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:29,648:INFO:Creating metrics dataframe
2024-09-16 23:48:29,682:INFO:Initializing Ada Boost Classifier
2024-09-16 23:48:29,682:INFO:Total runtime is 0.893289307753245 minutes
2024-09-16 23:48:29,698:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:29,699:INFO:Initializing create_model()
2024-09-16 23:48:29,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:29,700:INFO:Checking exceptions
2024-09-16 23:48:29,700:INFO:Importing libraries
2024-09-16 23:48:29,700:INFO:Copying training dataset
2024-09-16 23:48:29,737:INFO:Defining folds
2024-09-16 23:48:29,737:INFO:Declaring metric variables
2024-09-16 23:48:29,755:INFO:Importing untrained model
2024-09-16 23:48:29,813:INFO:Ada Boost Classifier Imported successfully
2024-09-16 23:48:29,846:INFO:Starting cross validation
2024-09-16 23:48:29,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:30,177:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,187:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,216:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,234:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,363:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,371:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,376:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:30,378:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,381:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,386:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,421:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,437:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,441:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,445:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,449:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,451:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:30,458:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,471:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:30,743:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,838:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,904:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:30,935:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:31,047:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,297:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,309:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,549:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,557:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,565:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,569:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:31,576:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,576:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,585:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,597:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,662:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,672:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:31,916:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:31,994:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-16 23:48:32,052:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,076:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,086:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,184:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,196:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,211:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:32,241:INFO:Calculating mean and std
2024-09-16 23:48:32,246:INFO:Creating metrics dataframe
2024-09-16 23:48:32,268:INFO:Uploading results into container
2024-09-16 23:48:32,270:INFO:Uploading model into container now
2024-09-16 23:48:32,273:INFO:_master_model_container: 9
2024-09-16 23:48:32,274:INFO:_display_container: 2
2024-09-16 23:48:32,276:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-09-16 23:48:32,276:INFO:create_model() successfully completed......................................
2024-09-16 23:48:32,593:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:32,593:INFO:Creating metrics dataframe
2024-09-16 23:48:32,635:INFO:Initializing Gradient Boosting Classifier
2024-09-16 23:48:32,635:INFO:Total runtime is 0.9425012866655985 minutes
2024-09-16 23:48:32,667:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:32,673:INFO:Initializing create_model()
2024-09-16 23:48:32,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:32,675:INFO:Checking exceptions
2024-09-16 23:48:32,675:INFO:Importing libraries
2024-09-16 23:48:32,676:INFO:Copying training dataset
2024-09-16 23:48:32,699:INFO:Defining folds
2024-09-16 23:48:32,700:INFO:Declaring metric variables
2024-09-16 23:48:32,717:INFO:Importing untrained model
2024-09-16 23:48:32,741:INFO:Gradient Boosting Classifier Imported successfully
2024-09-16 23:48:32,778:INFO:Starting cross validation
2024-09-16 23:48:32,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:33,566:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,577:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,578:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,584:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:33,589:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,594:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,597:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,597:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,619:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,630:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,671:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,685:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:33,693:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:33,698:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,611:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,648:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,659:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,672:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,672:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,679:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,681:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,692:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,694:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,695:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:34,705:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,710:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:34,727:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,347:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,356:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,366:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,392:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,399:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,410:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:35,431:INFO:Calculating mean and std
2024-09-16 23:48:35,437:INFO:Creating metrics dataframe
2024-09-16 23:48:35,446:INFO:Uploading results into container
2024-09-16 23:48:35,449:INFO:Uploading model into container now
2024-09-16 23:48:35,450:INFO:_master_model_container: 10
2024-09-16 23:48:35,451:INFO:_display_container: 2
2024-09-16 23:48:35,453:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-16 23:48:35,453:INFO:create_model() successfully completed......................................
2024-09-16 23:48:35,724:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:35,724:INFO:Creating metrics dataframe
2024-09-16 23:48:35,755:INFO:Initializing Linear Discriminant Analysis
2024-09-16 23:48:35,755:INFO:Total runtime is 0.9945057352383931 minutes
2024-09-16 23:48:35,767:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:35,768:INFO:Initializing create_model()
2024-09-16 23:48:35,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:35,769:INFO:Checking exceptions
2024-09-16 23:48:35,769:INFO:Importing libraries
2024-09-16 23:48:35,770:INFO:Copying training dataset
2024-09-16 23:48:35,789:INFO:Defining folds
2024-09-16 23:48:35,790:INFO:Declaring metric variables
2024-09-16 23:48:35,811:INFO:Importing untrained model
2024-09-16 23:48:35,824:INFO:Linear Discriminant Analysis Imported successfully
2024-09-16 23:48:35,875:INFO:Starting cross validation
2024-09-16 23:48:35,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:36,289:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,296:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,300:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:36,307:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,314:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,318:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,322:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,322:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,326:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,327:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:36,331:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,332:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,336:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,342:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,705:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,713:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,717:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:36,721:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,725:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,729:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,737:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,738:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,744:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,752:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,759:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,762:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:36,769:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,015:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,025:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,035:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,046:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,065:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:37,079:INFO:Calculating mean and std
2024-09-16 23:48:37,082:INFO:Creating metrics dataframe
2024-09-16 23:48:37,094:INFO:Uploading results into container
2024-09-16 23:48:37,096:INFO:Uploading model into container now
2024-09-16 23:48:37,098:INFO:_master_model_container: 11
2024-09-16 23:48:37,098:INFO:_display_container: 2
2024-09-16 23:48:37,102:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-16 23:48:37,102:INFO:create_model() successfully completed......................................
2024-09-16 23:48:37,405:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:37,406:INFO:Creating metrics dataframe
2024-09-16 23:48:37,441:INFO:Initializing Extra Trees Classifier
2024-09-16 23:48:37,441:INFO:Total runtime is 1.0226065158843993 minutes
2024-09-16 23:48:37,448:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:37,452:INFO:Initializing create_model()
2024-09-16 23:48:37,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:37,455:INFO:Checking exceptions
2024-09-16 23:48:37,455:INFO:Importing libraries
2024-09-16 23:48:37,455:INFO:Copying training dataset
2024-09-16 23:48:37,472:INFO:Defining folds
2024-09-16 23:48:37,472:INFO:Declaring metric variables
2024-09-16 23:48:37,489:INFO:Importing untrained model
2024-09-16 23:48:37,503:INFO:Extra Trees Classifier Imported successfully
2024-09-16 23:48:37,594:INFO:Starting cross validation
2024-09-16 23:48:37,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:39,016:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,036:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,040:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:39,045:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,046:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,059:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,067:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:39,075:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,090:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,100:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,108:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,245:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,258:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:39,267:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,092:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,103:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,106:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:40,106:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,127:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,136:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,140:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:40,150:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,327:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,336:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,349:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,443:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,453:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,460:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,963:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,973:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:40,986:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:41,001:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:41,009:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:41,021:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:41,044:INFO:Calculating mean and std
2024-09-16 23:48:41,055:INFO:Creating metrics dataframe
2024-09-16 23:48:41,067:INFO:Uploading results into container
2024-09-16 23:48:41,072:INFO:Uploading model into container now
2024-09-16 23:48:41,073:INFO:_master_model_container: 12
2024-09-16 23:48:41,073:INFO:_display_container: 2
2024-09-16 23:48:41,075:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-09-16 23:48:41,075:INFO:create_model() successfully completed......................................
2024-09-16 23:48:41,357:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:41,357:INFO:Creating metrics dataframe
2024-09-16 23:48:41,388:INFO:Initializing Light Gradient Boosting Machine
2024-09-16 23:48:41,388:INFO:Total runtime is 1.0883864680926003 minutes
2024-09-16 23:48:41,400:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:41,401:INFO:Initializing create_model()
2024-09-16 23:48:41,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:41,401:INFO:Checking exceptions
2024-09-16 23:48:41,402:INFO:Importing libraries
2024-09-16 23:48:41,402:INFO:Copying training dataset
2024-09-16 23:48:41,416:INFO:Defining folds
2024-09-16 23:48:41,416:INFO:Declaring metric variables
2024-09-16 23:48:41,432:INFO:Importing untrained model
2024-09-16 23:48:41,453:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-16 23:48:41,481:INFO:Starting cross validation
2024-09-16 23:48:41,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:43,454:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,457:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,459:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,464:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,468:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:43,469:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,473:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:43,475:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,475:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,482:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:43,482:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,486:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,537:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,551:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:43,556:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:43,563:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,037:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,038:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,050:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,052:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:44,057:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,060:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,060:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,072:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,081:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:44,086:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,221:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,231:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,235:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:44,239:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,452:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,464:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,467:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:44,473:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,480:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,487:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,494:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:44,501:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:44,526:INFO:Calculating mean and std
2024-09-16 23:48:44,530:INFO:Creating metrics dataframe
2024-09-16 23:48:44,535:INFO:Uploading results into container
2024-09-16 23:48:44,536:INFO:Uploading model into container now
2024-09-16 23:48:44,537:INFO:_master_model_container: 13
2024-09-16 23:48:44,538:INFO:_display_container: 2
2024-09-16 23:48:44,539:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-16 23:48:44,540:INFO:create_model() successfully completed......................................
2024-09-16 23:48:44,823:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:44,823:INFO:Creating metrics dataframe
2024-09-16 23:48:44,853:INFO:Initializing Dummy Classifier
2024-09-16 23:48:44,854:INFO:Total runtime is 1.146160038312276 minutes
2024-09-16 23:48:44,872:INFO:SubProcess create_model() called ==================================
2024-09-16 23:48:44,873:INFO:Initializing create_model()
2024-09-16 23:48:44,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000283505C4110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:44,873:INFO:Checking exceptions
2024-09-16 23:48:44,874:INFO:Importing libraries
2024-09-16 23:48:44,874:INFO:Copying training dataset
2024-09-16 23:48:44,896:INFO:Defining folds
2024-09-16 23:48:44,896:INFO:Declaring metric variables
2024-09-16 23:48:44,914:INFO:Importing untrained model
2024-09-16 23:48:44,929:INFO:Dummy Classifier Imported successfully
2024-09-16 23:48:44,967:INFO:Starting cross validation
2024-09-16 23:48:44,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:48:45,415:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,415:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,423:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,430:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:45,435:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,435:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,438:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:45,445:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,457:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,485:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,486:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,493:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:45,504:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,506:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,514:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:45,520:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,986:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:45,997:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,012:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,017:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,027:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,030:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,035:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,037:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,041:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,046:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,048:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,051:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,051:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,067:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,072:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,518:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,529:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,533:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,537:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,551:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,564:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,569:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:48:46,576:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Equilíbrio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:48:46,632:INFO:Calculating mean and std
2024-09-16 23:48:46,637:INFO:Creating metrics dataframe
2024-09-16 23:48:46,650:INFO:Uploading results into container
2024-09-16 23:48:46,652:INFO:Uploading model into container now
2024-09-16 23:48:46,653:INFO:_master_model_container: 14
2024-09-16 23:48:46,654:INFO:_display_container: 2
2024-09-16 23:48:46,654:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-09-16 23:48:46,654:INFO:create_model() successfully completed......................................
2024-09-16 23:48:47,029:INFO:SubProcess create_model() end ==================================
2024-09-16 23:48:47,030:INFO:Creating metrics dataframe
2024-09-16 23:48:47,176:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-09-16 23:48:47,227:INFO:Initializing create_model()
2024-09-16 23:48:47,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000283535F0DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:48:47,228:INFO:Checking exceptions
2024-09-16 23:48:47,244:INFO:Importing libraries
2024-09-16 23:48:47,254:INFO:Copying training dataset
2024-09-16 23:48:47,282:INFO:Defining folds
2024-09-16 23:48:47,282:INFO:Declaring metric variables
2024-09-16 23:48:47,283:INFO:Importing untrained model
2024-09-16 23:48:47,283:INFO:Declaring custom model
2024-09-16 23:48:47,285:INFO:Decision Tree Classifier Imported successfully
2024-09-16 23:48:47,292:INFO:Cross validation set to False
2024-09-16 23:48:47,293:INFO:Fitting Model
2024-09-16 23:48:47,451:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-09-16 23:48:47,451:INFO:create_model() successfully completed......................................
2024-09-16 23:48:48,151:INFO:_master_model_container: 14
2024-09-16 23:48:48,151:INFO:_display_container: 2
2024-09-16 23:48:48,160:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-09-16 23:48:48,160:INFO:compare_models() successfully completed......................................
2024-09-16 23:48:48,331:INFO:Initializing save_model()
2024-09-16 23:48:48,332:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), model_name=modelo_melhor_salvo, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-16 23:48:48,332:INFO:Adding model into prep_pipe
2024-09-16 23:48:48,452:INFO:modelo_melhor_salvo.pkl saved in current working directory
2024-09-16 23:48:48,492:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes',
                                             'Idade'],
                                    transformer=SimpleImputer(add_...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-09-16 23:48:48,493:INFO:save_model() successfully completed......................................
2024-09-16 23:54:42,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:54:42,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:54:42,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:54:42,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-16 23:55:18,550:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_12864\2617134326.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Viaja_Frequentemente'] = e['Viaja_Frequentemente'].replace({"Sim": 1, "Não": 0})

2024-09-16 23:55:18,555:WARNING:C:\Users\Marcos\AppData\Local\Temp\ipykernel_12864\2617134326.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  e['Dependentes'] = e['Dependentes'].replace({"1\"": 1, "0\"": 0, "2\"": 2, "3\"": 3})

2024-09-16 23:55:43,121:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2024-09-16 23:55:43,247:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:55:43,263:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:55:43,280:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:55:43,405:INFO:PyCaret ClassificationExperiment
2024-09-16 23:55:43,405:INFO:Logging name: clf-default-name
2024-09-16 23:55:43,406:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:55:43,406:INFO:version 3.3.2
2024-09-16 23:55:43,406:INFO:Initializing setup()
2024-09-16 23:55:43,406:INFO:self.USI: d3b9
2024-09-16 23:55:43,406:INFO:self._variable_keys: {'pipeline', 'USI', 'gpu_n_jobs_param', 'y_train', 'X_train', '_available_plots', 'fold_generator', 'exp_name_log', 'y', 'target_param', 'gpu_param', 'fold_shuffle_param', 'html_param', 'memory', 'exp_id', 'is_multiclass', 'fix_imbalance', 'y_test', 'fold_groups_param', 'data', 'log_plots_param', 'logging_param', 'seed', 'X_test', 'idx', 'X', '_ml_usecase', 'n_jobs_param'}
2024-09-16 23:55:43,407:INFO:Checking environment
2024-09-16 23:55:43,407:INFO:python_version: 3.11.5
2024-09-16 23:55:43,407:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:55:43,408:INFO:machine: AMD64
2024-09-16 23:55:43,408:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:55:43,413:INFO:Memory: svmem(total=8000290816, available=1063616512, percent=86.7, used=6936674304, free=1063616512)
2024-09-16 23:55:43,413:INFO:Physical Core: 2
2024-09-16 23:55:43,413:INFO:Logical Core: 4
2024-09-16 23:55:43,413:INFO:Checking libraries
2024-09-16 23:55:43,414:INFO:System:
2024-09-16 23:55:43,415:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:55:43,415:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:55:43,415:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:55:43,415:INFO:PyCaret required dependencies:
2024-09-16 23:55:43,616:INFO:                 pip: 24.0
2024-09-16 23:55:43,616:INFO:          setuptools: 65.5.0
2024-09-16 23:55:43,617:INFO:             pycaret: 3.3.2
2024-09-16 23:55:43,617:INFO:             IPython: 8.15.0
2024-09-16 23:55:43,617:INFO:          ipywidgets: 8.1.3
2024-09-16 23:55:43,617:INFO:                tqdm: 4.66.4
2024-09-16 23:55:43,618:INFO:               numpy: 1.25.2
2024-09-16 23:55:43,618:INFO:              pandas: 2.1.4
2024-09-16 23:55:43,618:INFO:              jinja2: 3.1.2
2024-09-16 23:55:43,619:INFO:               scipy: 1.11.2
2024-09-16 23:55:43,619:INFO:              joblib: 1.3.2
2024-09-16 23:55:43,620:INFO:             sklearn: 1.4.2
2024-09-16 23:55:43,620:INFO:                pyod: 2.0.0
2024-09-16 23:55:43,621:INFO:            imblearn: 0.12.3
2024-09-16 23:55:43,621:INFO:   category_encoders: 2.6.3
2024-09-16 23:55:43,622:INFO:            lightgbm: 4.3.0
2024-09-16 23:55:43,622:INFO:               numba: 0.59.1
2024-09-16 23:55:43,622:INFO:            requests: 2.31.0
2024-09-16 23:55:43,622:INFO:          matplotlib: 3.7.2
2024-09-16 23:55:43,622:INFO:          scikitplot: 0.3.7
2024-09-16 23:55:43,622:INFO:         yellowbrick: 1.5
2024-09-16 23:55:43,623:INFO:              plotly: 5.22.0
2024-09-16 23:55:43,623:INFO:    plotly-resampler: Not installed
2024-09-16 23:55:43,623:INFO:             kaleido: 0.2.1
2024-09-16 23:55:43,623:INFO:           schemdraw: 0.15
2024-09-16 23:55:43,623:INFO:         statsmodels: 0.14.2
2024-09-16 23:55:43,623:INFO:              sktime: 0.26.0
2024-09-16 23:55:43,624:INFO:               tbats: 1.1.3
2024-09-16 23:55:43,624:INFO:            pmdarima: 2.0.4
2024-09-16 23:55:43,624:INFO:              psutil: 5.9.5
2024-09-16 23:55:43,624:INFO:          markupsafe: 2.1.3
2024-09-16 23:55:43,624:INFO:             pickle5: Not installed
2024-09-16 23:55:43,625:INFO:         cloudpickle: 3.0.0
2024-09-16 23:55:43,625:INFO:         deprecation: 2.1.0
2024-09-16 23:55:43,625:INFO:              xxhash: 3.4.1
2024-09-16 23:55:43,625:INFO:           wurlitzer: 3.1.0
2024-09-16 23:55:43,625:INFO:PyCaret optional dependencies:
2024-09-16 23:55:46,123:INFO:                shap: Not installed
2024-09-16 23:55:46,123:INFO:           interpret: Not installed
2024-09-16 23:55:46,123:INFO:                umap: Not installed
2024-09-16 23:55:46,123:INFO:     ydata_profiling: Not installed
2024-09-16 23:55:46,123:INFO:  explainerdashboard: Not installed
2024-09-16 23:55:46,123:INFO:             autoviz: Not installed
2024-09-16 23:55:46,123:INFO:           fairlearn: Not installed
2024-09-16 23:55:46,124:INFO:          deepchecks: Not installed
2024-09-16 23:55:46,124:INFO:             xgboost: Not installed
2024-09-16 23:55:46,124:INFO:            catboost: Not installed
2024-09-16 23:55:46,124:INFO:              kmodes: Not installed
2024-09-16 23:55:46,124:INFO:             mlxtend: Not installed
2024-09-16 23:55:46,124:INFO:       statsforecast: Not installed
2024-09-16 23:55:46,124:INFO:        tune_sklearn: Not installed
2024-09-16 23:55:46,124:INFO:                 ray: Not installed
2024-09-16 23:55:46,125:INFO:            hyperopt: Not installed
2024-09-16 23:55:46,125:INFO:              optuna: Not installed
2024-09-16 23:55:46,125:INFO:               skopt: Not installed
2024-09-16 23:55:46,125:INFO:              mlflow: Not installed
2024-09-16 23:55:46,125:INFO:              gradio: Not installed
2024-09-16 23:55:46,125:INFO:             fastapi: 0.104.1
2024-09-16 23:55:46,125:INFO:             uvicorn: Not installed
2024-09-16 23:55:46,125:INFO:              m2cgen: Not installed
2024-09-16 23:55:46,125:INFO:           evidently: Not installed
2024-09-16 23:55:46,126:INFO:               fugue: Not installed
2024-09-16 23:55:46,126:INFO:           streamlit: Not installed
2024-09-16 23:55:46,126:INFO:             prophet: Not installed
2024-09-16 23:55:46,126:INFO:None
2024-09-16 23:55:46,126:INFO:Set up data.
2024-09-16 23:55:46,138:INFO:Set up folding strategy.
2024-09-16 23:55:46,138:INFO:Set up train/test split.
2024-09-16 23:55:46,153:INFO:Set up index.
2024-09-16 23:55:46,153:INFO:Assigning column types.
2024-09-16 23:55:46,160:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-16 23:55:46,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:55:46,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:46,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:46,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:46,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:55:46,730:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:46,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:46,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:46,826:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-16 23:55:46,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:47,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:47,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:47,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:47,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:47,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:47,357:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-16 23:55:47,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:47,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:48,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:48,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:48,014:INFO:Preparing preprocessing pipeline...
2024-09-16 23:55:48,017:INFO:Set up label encoding.
2024-09-16 23:55:48,017:INFO:Set up simple imputation.
2024-09-16 23:55:48,022:INFO:Set up encoding of categorical features.
2024-09-16 23:55:48,237:INFO:Finished creating preprocessing pipeline.
2024-09-16 23:55:48,257:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-09-16 23:55:48,257:INFO:Creating final display dataframe.
2024-09-16 23:55:48,926:INFO:Setup _display_container:                     Description                                  Value
0                    Session id                                    123
1                        Target                                  Plano
2                   Target type                                 Binary
3                Target mapping  Plano Conexão: 0, Plano Serenidade: 1
4           Original data shape                               (76, 11)
5        Transformed data shape                               (76, 13)
6   Transformed train set shape                               (53, 13)
7    Transformed test set shape                               (23, 13)
8              Numeric features                                      7
9          Categorical features                                      3
10                   Preprocess                                   True
11              Imputation type                                 simple
12           Numeric imputation                                   mean
13       Categorical imputation                                   mode
14     Maximum one-hot encoding                                     25
15              Encoding method                                   None
16               Fold Generator                        StratifiedKFold
17                  Fold Number                                     10
18                     CPU Jobs                                     -1
19                      Use GPU                                  False
20               Log Experiment                                  False
21              Experiment Name                       clf-default-name
22                          USI                                   d3b9
2024-09-16 23:55:49,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:49,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:49,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:49,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:49,602:INFO:setup() successfully completed in 6.22s...............
2024-09-16 23:55:49,625:INFO:Initializing save_model()
2024-09-16 23:55:49,625:INFO:save_model(model=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), model_name=Modelo_LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-16 23:55:49,625:INFO:Adding model into prep_pipe
2024-09-16 23:55:49,651:INFO:Modelo_LDA.pkl saved in current working directory
2024-09-16 23:55:49,673:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes',
                                             'Idade'],
                                    transformer=SimpleImputer(add_...
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-09-16 23:55:49,673:INFO:save_model() successfully completed......................................
2024-09-16 23:55:50,117:INFO:PyCaret ClassificationExperiment
2024-09-16 23:55:50,117:INFO:Logging name: clf-default-name
2024-09-16 23:55:50,118:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-16 23:55:50,118:INFO:version 3.3.2
2024-09-16 23:55:50,118:INFO:Initializing setup()
2024-09-16 23:55:50,118:INFO:self.USI: 9627
2024-09-16 23:55:50,119:INFO:self._variable_keys: {'pipeline', 'USI', 'gpu_n_jobs_param', 'y_train', 'X_train', '_available_plots', 'fold_generator', 'exp_name_log', 'y', 'target_param', 'gpu_param', 'fold_shuffle_param', 'html_param', 'memory', 'exp_id', 'is_multiclass', 'fix_imbalance', 'y_test', 'fold_groups_param', 'data', 'log_plots_param', 'logging_param', 'seed', 'X_test', 'idx', 'X', '_ml_usecase', 'n_jobs_param'}
2024-09-16 23:55:50,119:INFO:Checking environment
2024-09-16 23:55:50,119:INFO:python_version: 3.11.5
2024-09-16 23:55:50,119:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-09-16 23:55:50,120:INFO:machine: AMD64
2024-09-16 23:55:50,120:INFO:platform: Windows-10-10.0.19045-SP0
2024-09-16 23:55:50,125:INFO:Memory: svmem(total=8000290816, available=1074466816, percent=86.6, used=6925824000, free=1074466816)
2024-09-16 23:55:50,126:INFO:Physical Core: 2
2024-09-16 23:55:50,126:INFO:Logical Core: 4
2024-09-16 23:55:50,126:INFO:Checking libraries
2024-09-16 23:55:50,126:INFO:System:
2024-09-16 23:55:50,126:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-09-16 23:55:50,127:INFO:executable: c:\Users\Marcos\AppData\Local\Programs\Python\Python311\python.exe
2024-09-16 23:55:50,127:INFO:   machine: Windows-10-10.0.19045-SP0
2024-09-16 23:55:50,127:INFO:PyCaret required dependencies:
2024-09-16 23:55:50,127:INFO:                 pip: 24.0
2024-09-16 23:55:50,127:INFO:          setuptools: 65.5.0
2024-09-16 23:55:50,129:INFO:             pycaret: 3.3.2
2024-09-16 23:55:50,130:INFO:             IPython: 8.15.0
2024-09-16 23:55:50,130:INFO:          ipywidgets: 8.1.3
2024-09-16 23:55:50,131:INFO:                tqdm: 4.66.4
2024-09-16 23:55:50,131:INFO:               numpy: 1.25.2
2024-09-16 23:55:50,131:INFO:              pandas: 2.1.4
2024-09-16 23:55:50,131:INFO:              jinja2: 3.1.2
2024-09-16 23:55:50,132:INFO:               scipy: 1.11.2
2024-09-16 23:55:50,132:INFO:              joblib: 1.3.2
2024-09-16 23:55:50,132:INFO:             sklearn: 1.4.2
2024-09-16 23:55:50,132:INFO:                pyod: 2.0.0
2024-09-16 23:55:50,132:INFO:            imblearn: 0.12.3
2024-09-16 23:55:50,132:INFO:   category_encoders: 2.6.3
2024-09-16 23:55:50,133:INFO:            lightgbm: 4.3.0
2024-09-16 23:55:50,133:INFO:               numba: 0.59.1
2024-09-16 23:55:50,133:INFO:            requests: 2.31.0
2024-09-16 23:55:50,133:INFO:          matplotlib: 3.7.2
2024-09-16 23:55:50,133:INFO:          scikitplot: 0.3.7
2024-09-16 23:55:50,134:INFO:         yellowbrick: 1.5
2024-09-16 23:55:50,134:INFO:              plotly: 5.22.0
2024-09-16 23:55:50,135:INFO:    plotly-resampler: Not installed
2024-09-16 23:55:50,135:INFO:             kaleido: 0.2.1
2024-09-16 23:55:50,135:INFO:           schemdraw: 0.15
2024-09-16 23:55:50,136:INFO:         statsmodels: 0.14.2
2024-09-16 23:55:50,136:INFO:              sktime: 0.26.0
2024-09-16 23:55:50,136:INFO:               tbats: 1.1.3
2024-09-16 23:55:50,136:INFO:            pmdarima: 2.0.4
2024-09-16 23:55:50,136:INFO:              psutil: 5.9.5
2024-09-16 23:55:50,137:INFO:          markupsafe: 2.1.3
2024-09-16 23:55:50,137:INFO:             pickle5: Not installed
2024-09-16 23:55:50,137:INFO:         cloudpickle: 3.0.0
2024-09-16 23:55:50,137:INFO:         deprecation: 2.1.0
2024-09-16 23:55:50,137:INFO:              xxhash: 3.4.1
2024-09-16 23:55:50,137:INFO:           wurlitzer: 3.1.0
2024-09-16 23:55:50,138:INFO:PyCaret optional dependencies:
2024-09-16 23:55:50,138:INFO:                shap: Not installed
2024-09-16 23:55:50,138:INFO:           interpret: Not installed
2024-09-16 23:55:50,139:INFO:                umap: Not installed
2024-09-16 23:55:50,139:INFO:     ydata_profiling: Not installed
2024-09-16 23:55:50,139:INFO:  explainerdashboard: Not installed
2024-09-16 23:55:50,139:INFO:             autoviz: Not installed
2024-09-16 23:55:50,139:INFO:           fairlearn: Not installed
2024-09-16 23:55:50,140:INFO:          deepchecks: Not installed
2024-09-16 23:55:50,140:INFO:             xgboost: Not installed
2024-09-16 23:55:50,140:INFO:            catboost: Not installed
2024-09-16 23:55:50,140:INFO:              kmodes: Not installed
2024-09-16 23:55:50,140:INFO:             mlxtend: Not installed
2024-09-16 23:55:50,141:INFO:       statsforecast: Not installed
2024-09-16 23:55:50,141:INFO:        tune_sklearn: Not installed
2024-09-16 23:55:50,141:INFO:                 ray: Not installed
2024-09-16 23:55:50,141:INFO:            hyperopt: Not installed
2024-09-16 23:55:50,141:INFO:              optuna: Not installed
2024-09-16 23:55:50,142:INFO:               skopt: Not installed
2024-09-16 23:55:50,142:INFO:              mlflow: Not installed
2024-09-16 23:55:50,142:INFO:              gradio: Not installed
2024-09-16 23:55:50,142:INFO:             fastapi: 0.104.1
2024-09-16 23:55:50,142:INFO:             uvicorn: Not installed
2024-09-16 23:55:50,142:INFO:              m2cgen: Not installed
2024-09-16 23:55:50,142:INFO:           evidently: Not installed
2024-09-16 23:55:50,143:INFO:               fugue: Not installed
2024-09-16 23:55:50,143:INFO:           streamlit: Not installed
2024-09-16 23:55:50,143:INFO:             prophet: Not installed
2024-09-16 23:55:50,151:INFO:None
2024-09-16 23:55:50,151:INFO:Set up data.
2024-09-16 23:55:50,183:INFO:Set up folding strategy.
2024-09-16 23:55:50,183:INFO:Set up train/test split.
2024-09-16 23:55:50,216:INFO:Set up index.
2024-09-16 23:55:50,217:INFO:Assigning column types.
2024-09-16 23:55:50,244:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-16 23:55:50,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:55:50,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:50,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:50,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:50,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-16 23:55:50,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:51,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:51,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:51,227:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-16 23:55:51,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:51,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:51,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:52,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-16 23:55:52,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:52,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:52,273:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-16 23:55:52,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:52,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:53,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:53,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:53,170:INFO:Preparing preprocessing pipeline...
2024-09-16 23:55:53,172:INFO:Set up label encoding.
2024-09-16 23:55:53,172:INFO:Set up simple imputation.
2024-09-16 23:55:53,178:INFO:Set up encoding of categorical features.
2024-09-16 23:55:53,379:INFO:Finished creating preprocessing pipeline.
2024-09-16 23:55:53,397:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Marcos\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gastos_Mensais', 'Salario',
                                             'Gasto_Mensal_Cartao',
                                             'Viaja_Frequentemente',
                                             'Renda_Mensal', 'Dependentes...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Interesses', 'Profissao'],
                                    transformer=TargetEncoder(cols=['Interesses',
                                                                    'Profissao'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-09-16 23:55:53,397:INFO:Creating final display dataframe.
2024-09-16 23:55:53,599:INFO:Setup _display_container:                     Description                                  Value
0                    Session id                                    123
1                        Target                                  Plano
2                   Target type                                 Binary
3                Target mapping  Plano Conexão: 0, Plano Serenidade: 1
4           Original data shape                               (76, 11)
5        Transformed data shape                               (76, 13)
6   Transformed train set shape                               (53, 13)
7    Transformed test set shape                               (23, 13)
8              Numeric features                                      7
9          Categorical features                                      3
10                   Preprocess                                   True
11              Imputation type                                 simple
12           Numeric imputation                                   mean
13       Categorical imputation                                   mode
14     Maximum one-hot encoding                                     25
15              Encoding method                                   None
16               Fold Generator                        StratifiedKFold
17                  Fold Number                                     10
18                     CPU Jobs                                     -1
19                      Use GPU                                  False
20               Log Experiment                                  False
21              Experiment Name                       clf-default-name
22                          USI                                   9627
2024-09-16 23:55:54,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:54,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:54,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:54,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-16 23:55:54,659:INFO:setup() successfully completed in 4.56s...............
2024-09-16 23:55:54,672:INFO:Initializing compare_models()
2024-09-16 23:55:54,672:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-09-16 23:55:54,672:INFO:Checking exceptions
2024-09-16 23:55:54,687:INFO:Preparing display monitor
2024-09-16 23:55:54,820:INFO:Initializing Logistic Regression
2024-09-16 23:55:54,820:INFO:Total runtime is 0.0 minutes
2024-09-16 23:55:54,838:INFO:SubProcess create_model() called ==================================
2024-09-16 23:55:54,840:INFO:Initializing create_model()
2024-09-16 23:55:54,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:55:54,841:INFO:Checking exceptions
2024-09-16 23:55:54,841:INFO:Importing libraries
2024-09-16 23:55:54,842:INFO:Copying training dataset
2024-09-16 23:55:54,895:INFO:Defining folds
2024-09-16 23:55:54,896:INFO:Declaring metric variables
2024-09-16 23:55:54,910:INFO:Importing untrained model
2024-09-16 23:55:54,921:INFO:Logistic Regression Imported successfully
2024-09-16 23:55:54,945:INFO:Starting cross validation
2024-09-16 23:55:54,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:55:55,131:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:12,911:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:12,918:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:12,923:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:12,928:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:12,933:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:13,005:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:13,013:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:13,019:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:13,019:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:13,025:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:15,664:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:15,677:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:15,681:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:15,749:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:16,017:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:16,028:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:16,032:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:16,045:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:16,049:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:16,112:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:16,130:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:16,141:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:16,142:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:16,160:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:17,075:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:17,084:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:17,091:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:17,164:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:17,514:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:17,528:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:17,532:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:17,543:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:17,650:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,783:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:18,790:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,793:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:18,805:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,809:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,815:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,822:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,823:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,826:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,826:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,831:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,835:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,838:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,840:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:18,842:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:18,843:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:18,860:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:18,865:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:18,872:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:18,941:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:18,946:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,950:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,957:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,960:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,966:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,971:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:18,977:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:18,982:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:18,996:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:18,997:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:19,003:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:19,031:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:19,041:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:19,047:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:19,058:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:19,062:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:19,063:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:19,073:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:20,310:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:20,352:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:20,360:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:20,365:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:20,376:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:20,395:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:20,406:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:20,446:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:20,446:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:20,459:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:20,498:INFO:Calculating mean and std
2024-09-16 23:56:20,525:INFO:Creating metrics dataframe
2024-09-16 23:56:20,540:INFO:Uploading results into container
2024-09-16 23:56:20,543:INFO:Uploading model into container now
2024-09-16 23:56:20,546:INFO:_master_model_container: 1
2024-09-16 23:56:20,546:INFO:_display_container: 2
2024-09-16 23:56:20,575:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-16 23:56:20,576:INFO:create_model() successfully completed......................................
2024-09-16 23:56:21,654:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:21,654:INFO:Creating metrics dataframe
2024-09-16 23:56:21,771:INFO:Initializing K Neighbors Classifier
2024-09-16 23:56:21,772:INFO:Total runtime is 0.4492021838823954 minutes
2024-09-16 23:56:21,789:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:21,789:INFO:Initializing create_model()
2024-09-16 23:56:21,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:21,790:INFO:Checking exceptions
2024-09-16 23:56:21,790:INFO:Importing libraries
2024-09-16 23:56:21,790:INFO:Copying training dataset
2024-09-16 23:56:22,129:INFO:Defining folds
2024-09-16 23:56:22,130:INFO:Declaring metric variables
2024-09-16 23:56:22,156:INFO:Importing untrained model
2024-09-16 23:56:22,174:INFO:K Neighbors Classifier Imported successfully
2024-09-16 23:56:22,444:INFO:Starting cross validation
2024-09-16 23:56:22,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:22,645:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:25,849:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:25,856:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,860:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,860:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:25,869:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,873:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:25,873:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,884:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:25,901:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,905:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:25,910:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:25,911:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:25,923:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:25,939:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,984:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:25,993:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:26,000:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:26,038:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:26,043:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:26,050:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:26,056:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:26,060:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:26,068:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:26,109:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:26,118:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:26,134:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:26,134:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:26,142:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:30,849:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:30,853:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:30,859:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:30,865:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:30,870:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:30,922:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:30,930:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:30,940:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:30,942:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:30,945:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:30,949:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:30,950:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:30,953:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:30,960:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:30,964:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:30,969:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,007:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:31,012:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,017:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,021:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,022:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,028:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,028:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:31,029:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:31,034:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:31,063:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,068:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,078:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:31,079:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:31,085:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:31,164:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:31,169:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,173:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,179:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,184:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,215:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:31,219:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:31,227:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:31,228:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:31,233:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:33,618:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:33,624:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,629:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,635:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,642:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,672:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,676:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,684:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:33,684:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:33,692:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:33,711:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:33,716:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,720:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,725:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,729:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,739:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:33,785:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:33,791:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:33,793:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:33,798:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:33,828:INFO:Calculating mean and std
2024-09-16 23:56:33,843:INFO:Creating metrics dataframe
2024-09-16 23:56:33,849:INFO:Uploading results into container
2024-09-16 23:56:33,850:INFO:Uploading model into container now
2024-09-16 23:56:33,852:INFO:_master_model_container: 2
2024-09-16 23:56:33,854:INFO:_display_container: 2
2024-09-16 23:56:33,856:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-16 23:56:33,856:INFO:create_model() successfully completed......................................
2024-09-16 23:56:34,462:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:34,462:INFO:Creating metrics dataframe
2024-09-16 23:56:34,515:INFO:Initializing Naive Bayes
2024-09-16 23:56:34,515:INFO:Total runtime is 0.6615699609120687 minutes
2024-09-16 23:56:34,527:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:34,528:INFO:Initializing create_model()
2024-09-16 23:56:34,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:34,529:INFO:Checking exceptions
2024-09-16 23:56:34,529:INFO:Importing libraries
2024-09-16 23:56:34,529:INFO:Copying training dataset
2024-09-16 23:56:34,588:INFO:Defining folds
2024-09-16 23:56:34,588:INFO:Declaring metric variables
2024-09-16 23:56:34,619:INFO:Importing untrained model
2024-09-16 23:56:34,668:INFO:Naive Bayes Imported successfully
2024-09-16 23:56:34,706:INFO:Starting cross validation
2024-09-16 23:56:34,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:34,766:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:35,515:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:35,537:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,546:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,563:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,569:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,574:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,579:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,589:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,593:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,598:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,605:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,612:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:35,614:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:35,649:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,661:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,665:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,676:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,711:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:35,739:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:35,745:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,749:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,755:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,759:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,768:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:35,962:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:35,972:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:35,973:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:35,980:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:36,809:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:36,816:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,823:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,829:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,832:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,841:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,877:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,881:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:36,882:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:36,889:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:36,937:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:36,942:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,946:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,956:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:36,960:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,960:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,965:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,965:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,982:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,990:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,992:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:36,993:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:36,994:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:36,995:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:36,999:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:36,998:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,004:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,006:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,010:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,010:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,011:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:37,016:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,056:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,062:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,068:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,074:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,074:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:37,080:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,730:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:37,737:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,741:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,747:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,752:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,759:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,768:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,776:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,776:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:37,792:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,825:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:37,830:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,840:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,846:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,850:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,858:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:37,891:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:37,897:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,897:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:37,918:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:37,930:INFO:Calculating mean and std
2024-09-16 23:56:37,937:INFO:Creating metrics dataframe
2024-09-16 23:56:37,987:INFO:Uploading results into container
2024-09-16 23:56:37,989:INFO:Uploading model into container now
2024-09-16 23:56:37,990:INFO:_master_model_container: 3
2024-09-16 23:56:37,990:INFO:_display_container: 2
2024-09-16 23:56:37,991:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-16 23:56:37,991:INFO:create_model() successfully completed......................................
2024-09-16 23:56:38,591:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:38,591:INFO:Creating metrics dataframe
2024-09-16 23:56:38,755:INFO:Initializing Decision Tree Classifier
2024-09-16 23:56:38,755:INFO:Total runtime is 0.7322489698727925 minutes
2024-09-16 23:56:38,773:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:38,775:INFO:Initializing create_model()
2024-09-16 23:56:38,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:38,778:INFO:Checking exceptions
2024-09-16 23:56:38,779:INFO:Importing libraries
2024-09-16 23:56:38,780:INFO:Copying training dataset
2024-09-16 23:56:39,006:INFO:Defining folds
2024-09-16 23:56:39,007:INFO:Declaring metric variables
2024-09-16 23:56:39,022:INFO:Importing untrained model
2024-09-16 23:56:39,094:INFO:Decision Tree Classifier Imported successfully
2024-09-16 23:56:39,140:INFO:Starting cross validation
2024-09-16 23:56:39,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:39,260:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:42,008:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:42,012:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,084:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,093:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,098:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,110:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,115:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,120:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,124:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,129:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:42,130:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:42,133:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,136:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:42,145:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,223:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:42,228:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,230:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,237:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,242:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,278:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,286:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,343:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,357:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:42,373:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:42,379:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:42,381:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:42,389:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,459:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:43,467:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,471:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,482:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,488:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,520:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:43,559:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,570:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,574:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,574:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:43,581:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:43,582:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,586:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,590:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,596:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,603:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,609:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,614:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,615:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:43,620:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,632:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,643:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,658:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,658:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,665:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,672:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,673:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,681:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,688:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:43,692:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,704:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,705:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:43,716:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,735:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:43,739:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,740:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:43,750:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,700:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:43,752:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:43,758:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:44,302:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:44,308:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,373:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,384:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,420:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,437:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,440:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:44,442:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,445:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,452:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,454:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:44,455:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:44,467:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:44,473:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,485:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,505:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:44,514:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:44,519:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:44,520:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:44,525:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:44,534:INFO:Calculating mean and std
2024-09-16 23:56:44,559:INFO:Creating metrics dataframe
2024-09-16 23:56:44,567:INFO:Uploading results into container
2024-09-16 23:56:44,571:INFO:Uploading model into container now
2024-09-16 23:56:44,572:INFO:_master_model_container: 4
2024-09-16 23:56:44,572:INFO:_display_container: 2
2024-09-16 23:56:44,573:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-09-16 23:56:44,574:INFO:create_model() successfully completed......................................
2024-09-16 23:56:44,941:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:44,941:INFO:Creating metrics dataframe
2024-09-16 23:56:44,978:INFO:Initializing SVM - Linear Kernel
2024-09-16 23:56:44,979:INFO:Total runtime is 0.835983673731486 minutes
2024-09-16 23:56:44,998:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:44,999:INFO:Initializing create_model()
2024-09-16 23:56:44,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:44,999:INFO:Checking exceptions
2024-09-16 23:56:44,999:INFO:Importing libraries
2024-09-16 23:56:45,001:INFO:Copying training dataset
2024-09-16 23:56:45,052:INFO:Defining folds
2024-09-16 23:56:45,052:INFO:Declaring metric variables
2024-09-16 23:56:45,074:INFO:Importing untrained model
2024-09-16 23:56:45,092:INFO:SVM - Linear Kernel Imported successfully
2024-09-16 23:56:45,136:INFO:Starting cross validation
2024-09-16 23:56:45,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:45,200:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:45,969:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:45,972:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:45,979:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,002:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,011:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,019:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:46,022:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,024:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,030:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,032:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,036:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,038:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,041:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,041:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,046:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,049:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,049:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,049:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:46,050:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,057:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,090:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,099:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,116:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,122:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,131:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,132:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:46,138:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,782:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:46,786:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:46,788:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,795:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,800:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,803:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,805:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,813:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,815:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,818:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,821:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,836:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:46,839:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,842:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,847:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,848:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,848:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:46,862:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,887:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,890:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,900:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,908:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:46,912:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,916:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,917:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,917:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:46,920:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,922:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,928:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,932:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,952:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,957:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,965:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,966:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:46,971:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,978:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:46,983:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:46,989:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:46,996:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:47,003:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:47,557:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:47,567:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,572:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,581:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,604:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,606:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:47,612:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,619:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,625:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,624:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,635:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,645:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:47,645:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:47,645:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,655:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:47,682:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:47,689:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:47,698:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:47,698:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:47,705:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:47,715:INFO:Calculating mean and std
2024-09-16 23:56:47,737:INFO:Creating metrics dataframe
2024-09-16 23:56:47,751:INFO:Uploading results into container
2024-09-16 23:56:47,752:INFO:Uploading model into container now
2024-09-16 23:56:47,753:INFO:_master_model_container: 5
2024-09-16 23:56:47,754:INFO:_display_container: 2
2024-09-16 23:56:47,755:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-16 23:56:47,755:INFO:create_model() successfully completed......................................
2024-09-16 23:56:48,118:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:48,118:INFO:Creating metrics dataframe
2024-09-16 23:56:48,180:INFO:Initializing Ridge Classifier
2024-09-16 23:56:48,180:INFO:Total runtime is 0.8893222490946452 minutes
2024-09-16 23:56:48,211:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:48,212:INFO:Initializing create_model()
2024-09-16 23:56:48,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:48,212:INFO:Checking exceptions
2024-09-16 23:56:48,213:INFO:Importing libraries
2024-09-16 23:56:48,213:INFO:Copying training dataset
2024-09-16 23:56:48,286:INFO:Defining folds
2024-09-16 23:56:48,286:INFO:Declaring metric variables
2024-09-16 23:56:48,302:INFO:Importing untrained model
2024-09-16 23:56:48,322:INFO:Ridge Classifier Imported successfully
2024-09-16 23:56:48,580:INFO:Starting cross validation
2024-09-16 23:56:48,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:48,634:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

2024-09-16 23:56:50,002:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,046:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,049:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,055:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,074:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:50,093:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,112:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:50,124:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,160:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,170:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,172:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,179:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,179:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,180:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,183:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,186:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,189:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,190:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,195:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,195:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,201:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:50,202:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:50,235:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:50,245:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:50,260:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:50,277:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:50,278:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:50,297:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,029:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:51,042:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:51,047:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,059:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:51,064:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,077:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,080:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,081:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,085:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,085:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,085:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:51,091:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,091:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,092:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,095:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,095:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,099:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,100:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,100:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,105:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,108:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,109:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,110:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,111:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:51,113:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,114:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:51,114:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,115:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,119:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,125:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,126:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,133:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:51,150:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:51,159:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,159:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,159:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:51,165:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,180:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:51,181:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:51,195:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:52,179:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:52,199:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,212:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,217:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-09-16 23:56:52,267:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,278:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,282:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,295:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,317:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,374:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,410:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,414:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,419:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:52,421:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:52,431:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:52,447:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Plano Serenidade') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-09-16 23:56:52,459:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-16 23:56:52,472:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:52,472:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-09-16 23:56:52,479:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-09-16 23:56:52,590:INFO:Calculating mean and std
2024-09-16 23:56:52,594:INFO:Creating metrics dataframe
2024-09-16 23:56:52,600:INFO:Uploading results into container
2024-09-16 23:56:52,602:INFO:Uploading model into container now
2024-09-16 23:56:52,603:INFO:_master_model_container: 6
2024-09-16 23:56:52,604:INFO:_display_container: 2
2024-09-16 23:56:52,605:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-09-16 23:56:52,606:INFO:create_model() successfully completed......................................
2024-09-16 23:56:53,146:INFO:SubProcess create_model() end ==================================
2024-09-16 23:56:53,147:INFO:Creating metrics dataframe
2024-09-16 23:56:53,245:INFO:Initializing Random Forest Classifier
2024-09-16 23:56:53,245:INFO:Total runtime is 0.97374507188797 minutes
2024-09-16 23:56:53,260:INFO:SubProcess create_model() called ==================================
2024-09-16 23:56:53,260:INFO:Initializing create_model()
2024-09-16 23:56:53,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CCAF28FDD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CCA916DD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-16 23:56:53,261:INFO:Checking exceptions
2024-09-16 23:56:53,261:INFO:Importing libraries
2024-09-16 23:56:53,261:INFO:Copying training dataset
2024-09-16 23:56:53,331:INFO:Defining folds
2024-09-16 23:56:53,337:INFO:Declaring metric variables
2024-09-16 23:56:53,353:INFO:Importing untrained model
2024-09-16 23:56:53,366:INFO:Random Forest Classifier Imported successfully
2024-09-16 23:56:53,457:INFO:Starting cross validation
2024-09-16 23:56:53,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-16 23:56:53,471:WARNING:c:\Users\Marcos\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(

